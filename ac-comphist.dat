((("vps" .
   [1 0 0])
  ("texture" .
   [2 0 0 0 0 0 0])
  ("0x00" .
   [3 0 0 0])
  ("renderer" .
   [0 0 0 0 0 1 3 1])
  ("?y" .
   [3 0])
  ("?x" .
   [4 0])
  ("empty-bind" .
   [0 0 0 0 1 2 0 0 0 0])
  ("pat-match" .
   [1 0 0 0 1 1 5 1 0])
  ("extend-binding" .
   [0 0 0 0 0 0 0 0 0 0 1 0 0 0])
  ("exte" .
   [0 0 0 1])
  ("pat" .
   [11 0 0])
  ("symbolp" .
   [1 0 0 0 0 0 0])
  ("fail" .
   [3 0 0 0])
  ("defun-memo" .
   [1 0 0 0 0 0 0 0 0 0])
  ("cache" .
   [2 0 0 0 0])
  ("memo" .
   [1 0 0 0])
  ("fn-name" .
   [2 0 0 0 0 0 0])
  ("symbol-function" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("memoize" .
   [2 0 0 0 0 0 0])
  ("pair" .
   [2 0 0 0])
  ("ALIST" .
   [0 0 0 0 1])
  ("mapc" .
   [2 0 0 0])
  ("read-delimited-list" .
   [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0])
  ("best-first-search" .
   [0 0 0 0 0 0 0 0 2 0 1 0 0 0 0 0 0])
  ("diff" .
   [4 0 0 0])
  ("sorter" .
   [2 0 0 0 0 0])
  ("cost-fn" .
   [3 0 0 0 0 0 0])
  (":key" .
   [1 0 0 0])
  ("old" .
   [1 0 0])
  ("sort" .
   [1 0 0 0])
  ("abs" .
   [1 0 0])
  ("finite-binary-tree" .
   [0 0 0 0 0 0 4 0 0 1 0 0 0 0 0 0 0 0])
  ("finished" .
   [0 0 0 0 1 0 0 0])
  ("remove-if" .
   [1 0 0 0 0 0 0 0 0])
  ("breadth-first-search" .
   [0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("preppend" .
   [0 0 0 0 0 1 0 0])
  ("depth-first-search" .
   [0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0])
  ("is-a" .
   [10 0 0 0])
  ("target" .
   [1 0 0 0 0 0])
  ("binary-tree" .
   [0 0 0 5 2 2 0 0 0 0 0])
  ("successors" .
   [0 0 0 4 3 1 0 0 0 0])
  ("combiner" .
   [2 0 0 0 0 0 0 0])
  ("tree-search" .
   [2 0 0 0 0 0 0 0 0 2 0])
  ("tree-" .
   [0 0 0 0 1])
  ("goal-p" .
   [5 0 1 0 1 1])
  ("states" .
   [8 0 0 0 0 0])
  (":search" .
   [1 0 0 0 0 0 0])
  ("break" .
   [5 0 0 0 0])
  ("fib" .
   [7 0 0])
  ("/tmp/coleslaw/" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 1])
  ("~/workspace/blog/" .
   [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0])
  ("coleslaw" .
   [0 0 0 0 0 0 0 2])
  ("get-macro-character" .
   [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0])
  ("g" .
   [1])
  ("set-macro-character" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0])
  ("SETF" .
   [0 0 0 1])
  ("?1234" .
   [1 0 0 0 0])
  ("char2" .
   [2 0 0 0 0])
  ("char1" .
   [2 0 0 0 0])
  ("set-dispatch-macro-character" .
   [0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0])
  ("~A~%" .
   [2 0 0 0])
  ("when-bind" .
   [1 0 0 0 0 0 0 0 0])
  ("when-bind*" .
   [6 0 0 0 0 0 0 0 0 0])
  ("prog" .
   [0 0 0 1])
  ("my-let" .
   [1 0 0 0 0 0])
  ("cadr" .
   [1 0 0 0])
  ("consp" .
   [2 0 0 0 0])
  ("fibonacci" .
   [0 0 0 0 2 0 0 0 0])
  ("iter" .
   [8 0 0 0])
  ("'irony-mode" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("'c-mode-hook" .
   [0 0 0 0 0 1 0 0 0 0 0 0])
  ("'c++-mode-hook" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 1])
  ("backlog" .
   [1 0 0 0 1 0 0])
  ("clientfd" .
   [1 0 0 0 0 0 0 0])
  ("strings.h" .
   [1 0 0 0 0 0 0 0 0])
  ("servfd" .
   [1 0 0 0 0 1])
  (":log4cl" .
   [0 0 0 0 0 1 0])
  (":CAVEMAN2" .
   [0 0 0 0 0 0 0 0 1])
  (":language-popularity" .
   [0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("fill" .
   [1 0 0 0])
  ("position" .
   [2 0 0 0 0 0 0 0])
  ("delete" .
   [3 0 0 0 0 0])
  ("numberp" .
   [1 0 0 0 0 0 1])
  ("'lisp-mode" .
   [0 0 0 0 0 0 1 0 0 0])
  ("add-hook" .
   [8 0 0 0 0 0 0 0])
  ("'slime-documentation-lookup" .
   [0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("M-h" .
   [2 0 0])
  ("kbd" .
   [2 0 0])
  ("slime-prefix-map" .
   [1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0])
  ("define-key" .
   [1 0 0 0 0 0 1 0 0 0])
  ("paredit" .
   [0 0 0 0 1 0 0])
  ("package-use-list" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("not-implemented" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("hunchentoot-operation-not-implemented-operation" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":operation" .
   [2 0 0 0 0 0 0 0 0 0])
  ("operation" .
   [1 0 0 0 0 0 0 0 0])
  ("operation-not-implemented" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("parameter-error" .
   [3 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("warn" .
   [1 0 0 0])
  ("hunchentoot-warn" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("hunchentoot-simple-warning" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("warning" .
   [1 0 0 0 0 0 0])
  ("hunchentoot-warning" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":format-arguments" .
   [2 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0])
  (":format-control" .
   [2 0 0 0 0 0 0 0 0 0 0 1 0 0 0])
  ("format-control" .
   [4 0 0 0 0 0 0 0 0 1 1 0 0 0])
  ("simple-condition" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("hunchentoot-simple-error" .
   [3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("hunchentoot-condition" .
   [3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("block" .
   [1 0 0 0 0])
  ("implicit" .
   [1 0 0 0 0 0 0 0])
  ("passes" .
   [2 0 0 0 0 0])
  ("eval" .
   [1 0 0 0])
  ("multiple" .
   [6 0 0 0 0 0 1 0])
  ("wake-acceptor-for-shutdown" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0])
  ("execute-acceptor" .
   [3 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0])
  ("start-listening" .
   [2 0 0 0 0 0 0 0 0 1 0 0 0 0 0])
  ("accept" .
   [1 0 0 0 0 2])
  ("acceptor-ssl-p" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("acceptor-dispatch-request" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("reset-connection-stream" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("process-connection" .
   [4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("accept-connections" .
   [4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("+lispworks" .
   [3 0 0 0 0 0 0 0 0 0])
  ("started-p" .
   [1 0 0 0 0 0 0 0 0])
  ("soft" .
   [3 0 0 0])
  ("stop" .
   [2 0 0 0])
  ("translate-logical-pathname" .
   [0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0])
  ("acceptor-taskmaster" .
   [2 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0])
  ("taskmaster" .
   [33 0 0 0 1 2 1 3 0 1])
  ("with-accessors" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":after" .
   [2 0 0 0 0 0])
  ("initialize-instance" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("acceptor." .
   [0 0 0 0 0 0 0 0 1])
  ("print-unreadable-object" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("print-object" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("load-time-value" .
   [1 0 0 0 0 0 0 0 0 1 0 0 0 0 0])
  ("*error-output*" .
   [0 0 0 0 0 0 0 0 0 2 0 0 0 0])
  ("*default-connection-timeout*" .
   [0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("single-threaded-taskmaster" .
   [2 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("one-thread-per-connection-taskmaster" .
   [1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":taskmaster" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("-lispworks" .
   [7 0 0 0 1 0 0 0 1 0])
  ("reply" .
   [1 0 0 0 0])
  ("request" .
   [7 0 0 0 0 0 0])
  (":default-initargs" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("acceptor-document-root" .
   [4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":document-root" .
   [1 0 0 0 0 0 0 0 0 0 0 0 1 0])
  ("document-root" .
   [5 0 0 0 0 0 0 0 0 0 0 0 0])
  ("acceptor-error-template-directory" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0])
  (":error-template-directory" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("error-template-directory" .
   [0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 1 0 0 0 0])
  ("acceptor-message-log-destination" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0])
  (":message-log-destination" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0])
  ("message-log-destination" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0])
  ("e" .
   [2])
  ("acceptor-access-log-destination" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0])
  (":access-log-destination" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0])
  ("access-log-destination" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("acceptor-shutdown-lock" .
   [6 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0])
  ("shutdown-lock" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0])
  ("accessor-requests-in-progress" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0])
  ("requests-in-progress" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("acceptor-shutdown-p" .
   [4 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0])
  ("acceptor-listen-backlog" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0])
  (":listen-backlog" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("listen-backlog" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("acceptor-listen-socket" .
   [9 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("listen-socket" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0])
  ("-:lispworks" .
   [2 0 0 0 0 0 0 0 0 0 0])
  ("acceptor-process" .
   [5 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("+:lispworks" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("acceptor-write-timeout" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":write-timeout" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("write-timeout" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0])
  ("acceptor-read-timeout" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":read-timeout" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0])
  ("read-timeout" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("acceptor-persistent-connections-p" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":persistent-connections-p" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("persistent-connections-p" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("acceptor-input-chunking-p" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0])
  (":input-chunking-p" .
   [0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0])
  ("input-chunking-p" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("acceptor-output-chunking-p" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":output-chunking-p" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("output-chunking-p" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("acceptor-reply-class" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0])
  (":reply-class" .
   [2 0 0 0 0 0 0 0 0 0 0 0])
  ("reply-class" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("acceptor-request-class" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":accessor" .
   [20 0 0 0 0 0 0 0 0])
  (":request-class" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("request-class" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0])
  ("acceptor-name" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0])
  (":acceptor" .
   [4 0 0 0 0 0 0 0 0])
  ("acceptor-address" .
   [4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":address" .
   [2 0 0 0 0 0 0 0])
  ("address" .
   [3 0 0 0 0 0 0])
  ("acceptor-port" .
   [5 0 0 0 0 0 0 0 0 0 0 0 0])
  (":port" .
   [2 0 0 0 0])
  ("port" .
   [4 0 0 0])
  ("acceptor" .
   [90 0 0 0 0 1 5 1])
  ("pathname-directory" .
   [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0])
  ("*load-truename*" .
   [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0])
  ("*compile-file-truename*" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("source-directory" .
   [1 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0])
  ("sub-directory" .
   [1 0 0 0 0 0 2 0 0 0 0 0 0])
  ("default-document-directory" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0])
  ("read-char*" .
   [1 0 0 0 0 0 0 0 0 0])
  ("subtype" .
   [1 0 0 0 0 0 0])
  ("read-token" .
   [1 0 0 0 0 0 0 0 0 0])
  ("*current-error-message*" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0])
  ("let*" .
   [3 0 0 0])
  ("with-character-stream-semantics" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0])
  ("content-type-header" .
   [3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("parse-content-type" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("string-to-octets" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1])
  ("char<=" .
   [3 0 0 0 0 0])
  ("cookie" .
   [0 0 0 0 0 1])
  ("cookies-to-alist" .
   [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0])
  ("cookies" .
   [2 0 0 0 0 0 0])
  ("string-trim" .
   [2 0 0 0 0 0 0 0 0 0 0])
  (":limit" .
   [2 0 0 0 0 0])
  ("split" .
   [3 0 0 0 0])
  ("entry" .
   [4 0 0 0 0])
  ("*HUNCHENTOOT-STREAM*" .
   [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0])
  ("form-url-encoded-list" .
   [1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0])
  ("form-url-encoded-list-to-alist" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("octets-to-string" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("code-char" .
   [1 0 0 0 0 0 0 0 0])
  (":converter" .
   [1 0 0 0 0 0 0 0 0 0])
  ("u" .
   [1])
  ("upgrade-vector" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("seq" .
   [1 0 0])
  ("advance" .
   [4 0 0 0 0 0 0])
  ("array-in-bounds-p" .
   [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0])
  ("peek" .
   [3 0 0 0])
  ("vector-push" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("push-integer" .
   [4 0 0 0 0 0 0 0 0 0 0 0])
  (":radix" .
   [1 0 0 0 0 0])
  ("decode-hex" .
   [3 0 0 0 0 0 0 0 0 0])
  ("labels" .
   [4 0 0 0 0 0])
  ("unicodep" .
   [4 0 0 0 0 0 0 0])
  ("octet" .
   [3 0 0 0 0])
  ("url-encode" .
   [2 0 0 0 0 0 0 0 0 0])
  ("return-from" .
   [2 0 0 0 0 0 0 0 0 0 0])
  ("*hunchentoot-default-external-format*" .
   [3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("external-format" .
   [6 0 0 0 0 0 0 0 1 0 0 0 0 1 0])
  ("url-decode" .
   [4 0 0 0 1 0 0 0 0 0])
  ("/=" .
   [1 0])
  (":junk-allowed" .
   [0 0 0 0 0 1 0 0 0 1 0 0 0])
  (":end" .
   [4 0 0 0])
  (":start" .
   [5 0 0 0 0 0])
  ("stopped" .
   [2 0 0 0 0 0 0])
  ("bad-request" .
   [2 0 0 0 0 0 0 0 1 1 0])
  ("radix" .
   [2 0 0 0 0])
  ("ensure-parse-integer" .
   [1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0])
  ("next(" .
   [1 0 0 0 0])
  ("array &$array)" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 2])
  ("end(" .
   [0 1 0 0])
  ("tmp" .
   [5 0 0])
  ("*var*" .
   [5 0 2 3 1])
  ("pop" .
   [2 0 0])
  ("&optional" .
   [16 0 0 0 0 1 0 0 0])
  ("my-dolist" .
   [1 0 0 0 0 0 0 0 0])
  ("resultform" .
   [0 0 0 2 0 0 1 0 0 0])
  ("listform" .
   [2 0 0 0 0 0 2 0])
  ("tailvar" .
   [2 0 2 2 2 2 0])
  ("dolist" .
   [2 0 0 0 0 0])
  ("*x*" .
   [1 0 2])
  ("case" .
   [6 0 0 0])
  ("incf" .
   [7 0 0 0])
  ("lazy-evaluate" .
   [0 0 0 0 0 2 0 0 0 0 0 0 0])
  ("symbol-macrolet" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("\\PDO" .
   [3 0 0 0])
  ("+test+" .
   [2 0 0 0 0 0])
  ("defconstant" .
   [5 0 0 0 0 0 0 0 0 0 0])
  (":learn-alex" .
   [0 0 0 0 1 0 0 0 0 0 0])
  (":alexandria" .
   [0 0 0 0 1 3 0 1 0 0 0])
  ("absolute" .
   [0 0 0 0 0 1 0 0])
  (":int" .
   [2 0 0 0])
  ("clock" .
   [1 0 0 0 0])
  ("libc" .
   [1 0 0 0])
  (":cl-ptrace" .
   [0 0 0 0 0 1 0 0 0 0])
  ("drakma" .
   [0 0 0 0 1 0])
  (":example-project" .
   [0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0])
  ("asdf:make" .
   [1 0 0 0 0 0 0 0 0])
  ("factorial" .
   [0 0 0 1 1 0 0 2 0])
  ("mean" .
   [1 0 0 0])
  ("iota" .
   [3 0 0 0])
  ("extremum" .
   [0 0 0 0 0 0 1 0])
  (":" .
   [1])
  ("map-permutations" .
   [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0])
  ("last-elt" .
   [1 0 0 0 0 0 0 0])
  ("first-elt" .
   [2 0 0 0 0 0 0 0 0])
  ("*fun*" .
   [1 0 4 4 3])
  ("my-of-type" .
   [3 0 0 0 0 1 1 0 0 0])
  ("-3.14" .
   [2 0 0 0 0])
  ("make-keyword" .
   [0 0 0 0 0 1 0 0 0 0 0 0])
  ("whichever" .
   [4 0 0 1 0 4 1 0 0])
  ("plist-hash-table" .
   [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0])
  (":hello" .
   [1 0 0 0 0 0])
  ("clojure" .
   [1 0 0 0 0 0 0])
  (":lisp" .
   [1 0 0 0 0])
  ("*ht*" .
   [1 0 0 10])
  ("next" .
   [4 0 0 0])
  ("*counter*" .
   [0 0 0 0 0 0 0 0 1])
  ("once-only" .
   [1 0 0 0 0 0 0 0 0])
  ("with-gensyms" .
   [3 0 0 0 0 0 0 0 0 0 0 0])
  ("read-stream-content-into-byte-vector" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0])
  ("with-input-from-file" .
   [4 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0])
  ("myfile.txt" .
   [1 0 1 0 0 0 1 0 0 0])
  ("if-let" .
   [3 0 0 0 0 0])
  ("STR-DESIGNATOR" .
   [0 0 0 0 0 0 0 0 1 0 0 0 0 0])
  ("+pi+" .
   [1 0 0 0])
  ("TEST" .
   [1 0 0 0])
  (":fullstackwiki" .
   [0 0 0 0 0 0 1 0 0 0 0 0 0 0])
  ("subtypep" .
   [3 0 0 0 0 0 0 0])
  ("typep" .
   [8 0 0 0 0])
  ("region" .
   [0 0 0 1 0 0])
  ("buffer-substring-no-properties" .
   [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("mark-active" .
   [0 0 0 0 0 0 0 0 0 2 0])
  ("%s" .
   [2 0])
  ("mark" .
   [3 0 0 0])
  ("region-end" .
   [3 0 0 0 0 0 0 0 0 0])
  ("region-beginning" .
   [0 0 0 0 0 0 0 0 0 1 0 0 2 0 0 0])
  ("stringp" .
   [3 0 0 0 0 0 0])
  ("'no-properties" .
   [0 0 0 0 1 0 0 0 0 0 0 0 0 0])
  ("'word" .
   [1 0 0 0 0])
  ("thing-at-point" .
   [0 0 0 0 0 0 0 0 1 0 0 0 0 0])
  ("bing" .
   [1 0 0 0])
  ("www" .
   [1 0 0])
  ("eww" .
   [2 0 0])
  ("word" .
   [9 0 0 0])
  ("Joey" .
   [1 0 0 0])
  ("world!" .
   [2 0 0 0 0 0])
  ("cl-ppcre:regex-replace" .
   [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0])
  ("arpa/" .
   [0 0 0 1 0])
  ("h_addr_list" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("h_addrtype" .
   [2 0 0 0 0 0 0 0 0 0])
  ("h_addr" .
   [1 0 0 0 0 0])
  ("hptr" .
   [4 0 0 0])
  ("pptr" .
   [8 0 0 0])
  ("errorMessage" .
   [0 0 0 0 0 0 0 0 0 1 0 0])
  ("email" .
   [1 0 0 0 0])
  ("customException" .
   [0 0 0 0 1 0 1 0 0 0 0 0 0 0 0])
  ("errorMsg" .
   [0 0 0 0 0 0 0 1])
  ("getMeta" .
   [0 0 0 0 0 1 0])
  ("PHP_EOF" .
   [0 0 0 1 1 0 0])
  ("chmod" .
   [2 0 0 0 0])
  ("statbuf" .
   [2 0 0 0 0 0 0])
  ("stat" .
   [2 0 0 0])
  ("nbytes" .
   [2 0 0 0 0 0])
  ("16." .
   [1 1 3])
  ("<sys/socket" .
   [1 0 1 0 0 0 0 0 0 0 0])
  ("connect" .
   [1 0 0 0 0 0 0])
  ("shmptr" .
   [1 0 0 0 0 0])
  ("SHM_MODE" .
   [0 0 0 0 0 0 1 0])
  ("SHM_SIZE" .
   [1 0 0 0 0 0 0 0])
  ("MALLOC_SIZE" .
   [0 0 0 0 1 1 0 0 0 0 0])
  ("shmid" .
   [3 0 0 0 0])
  ("ARRAY_SIZE" .
   [0 0 0 1 0 1 0 0 0 0])
  ("array" .
   [3 0 0 0 0])
  ("MONGODBHOME" .
   [0 0 0 0 1 0 0 0 0 0 0])
  ("PATH:" .
   [2 0 0 0 0])
  ("phpinfo" .
   [0 0 0 2 0 0 0])
  ("defcomparator" .
   [0 0 0 0 0 0 1 0 0 0 0 0 0])
  ("mid" .
   [2 0 0])
  ("quick_sort_util_int" .
   [0 0 0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0])
  ("quick_split" .
   [0 0 0 0 0 0 0 1 0 0 0])
  ("pid_t" .
   [2 0 0 0 0])
  ("cmptr" .
   [2 0 0 1 2])
  ("pivot_idx" .
   [0 0 0 1 1 1 0 0 0])
  ("swap_int" .
   [2 0 0 0 0 0 0 0])
  ("memcpy" .
   [2 0 0 0 0 0])
  ("bak" .
   [2 0 0])
  ("rand_r" .
   [1 0 0 0 0 0])
  ("rand" .
   [1 0 0 0])
  ("srand" .
   [1 0 0 0 0])
  ("sizes" .
   [1 0 0 0 1])
  ("checkbox" .
   [2 0 0 0 0 0 0 0])
  ("sendline" .
   [2 0 0 0 0 0 0 1])
  ("FD_ISSET" .
   [1 0 0 0 0 0 0 0])
  ("fputs" .
   [1 0 0 0 0])
  ("recvline" .
   [2 0 0 0 0 0 0 0])
  ("maxfdp1" .
   [1 0 0 0 1 0 0])
  ("select" .
   [2 0 0 0 0 0])
  ("FD_SET" .
   [1 0 0 0 0 0])
  ("rset" .
   [4 0 1 0])
  ("fileno" .
   [3 0 0 0 0 0])
  ("MAXLINE" .
   [3 0 0 0 0 0 0])
  ("EINTR" .
   [0 0 0 1 0])
  ("nwritten" .
   [0 0 0 0 4 1 0 0])
  ("nleft" .
   [5 0 0 0 0])
  ("size_t" .
   [4 0 0 0 0 0])
  ("vptr" .
   [1 0 0 0])
  ("ssize_t" .
   [5 0 0 0 0 0 0])
  ("println" .
   [1 0 0 0 0 0 0])
  ("today" .
   [1 0 0 0 0])
  ("Date" .
   [1 0 0 0])
  ("servlet" .
   [2 0 0 0 0 0 0])
  ("pfd2" .
   [1 0 0 0])
  ("pfd1" .
   [1 0 0 0])
  ("pipe" .
   [2 0 0 0])
  ("NBUF" .
   [0 0 0 1])
  ("numop" .
   [1 0 0 0 0])
  ("aiolist" .
   [1 0 0 0 0 0 0])
  ("aio_sigevent" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("aio_buf" .
   [1 0 0 0 0 0 0])
  ("aiocb" .
   [2 0 0 0 0])
  ("bufs" .
   [4 0 0 0])
  ("UNUSED" .
   [2 0 0 0 0 0])
  ("POLLWRNORM" .
   [1 0 0 0 0 0 0 0 0 0])
  ("revents" .
   [1 0 0 0 0 0 0])
  ("nread" .
   [2 0 0 0 0])
  ("POLLRDNORM" .
   [1 0 0 0 0 0 0 0 0 0])
  ("fds" .
   [9 0 0])
  ("fd" .
   [5 0])
  ("on_write" .
   [1 0 0 0 0 0 0 0])
  ("write_req" .
   [1 0 0 0 0 0 0 0 0])
  ("uv_fs_write" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("open_req" .
   [1 0 0 0 0 0 0 0])
  ("close_req" .
   [1 0 0 0 0 0 0 0 0])
  ("uv_fs_close" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("uv_fs_t" .
   [3 0 0 0 0 0 0])
  ("on_read" .
   [2 0 0 0 0 0 0])
  ("uv_strerror" .
   [3 0 0 0 0 0 0 0 0 0 0])
  ("iov" .
   [3 0 0])
  ("req" .
   [10 0 0])
  ("read_req" .
   [2 0 0 0 0 0 0 0])
  ("uv_default_loop" .
   [0 0 0 0 0 0 3 0 0 0 1 0 0 0 0])
  ("uv_fs_read" .
   [2 0 0 0 0 0 0 0 0 0])
  ("buffer" .
   [4 0 0 0 0 0])
  ("uv_buf_init" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("getpid" .
   [1 0 0 0 0 0])
  ("ftruncate" .
   [1 0 0 0 0 0 0 0 0])
  ("LOG_ERR" .
   [1 0 0 0 0 0 0])
  ("lockfile" .
   [1 0 0 0 0 0 0 0])
  ("LOCKMODE" .
   [0 0 0 0 0 2 1 0])
  ("O_CREAT" .
   [1 0 0 0 0 0 0])
  ("LOCKFILE" .
   [1 0 0 0 0 1 1 0])
  ("S_IROTH" .
   [1 0 0 0 0 0 0])
  ("S_IRGRP" .
   [1 0 0 0 0 0 0])
  ("S_IWUSR" .
   [1 0 0 0 0 0 0])
  ("S_IRUSR" .
   [1 0 0 0 0 0 0])
  ("pivot" .
   [1 0 0 0 0])
  ("right" .
   [13 0 0 0 0])
  ("left" .
   [19 0 0 0])
  ("arr" .
   [31 0 0])
  ("__SORT_H" .
   [1 0 0 0 0 0 0 0])
  ("row" .
   [4 0 0])
  ("result" .
   [14 0 0 0 3 3])
  ("server-run" .
   [1 0 0 0 0 0 0 0 1 0])
  ("other" .
   [2 0 0 0 0])
  (":commonqt-ts" .
   [0 0 0 0 0 0 0 1 0 0 0 0])
  ("condition-wait" .
   [3 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("with-lock-held" .
   [6 0 0 0 0 0 0 0 0 0 0 1 0 0])
  ("*cond*" .
   [2 0 0 0 0 1])
  ("value!" .
   [1 0 0 0 0 0])
  ("acquire-lock" .
   [2 0 0 0 0 1 0 0 0 0 0 0])
  ("lock-p" .
   [3 0 0 0 0 0])
  ("*global-lock*" .
   [0 0 0 0 10 2 0 0 0 0 0 0 0])
  ("current-thread" .
   [1 0 0 0 0 0 1 2 0 0 0 0 0 0])
  ("bordeaux-threads" .
   [0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0])
  ("make-thread" .
   [2 0 0 0 0 0 0 0 0 0 0])
  ("special" .
   [2 0 0 0 0 0 0])
  ("initforms" .
   [1 0 0 0 0 0 0 0 1])
  ("&body" .
   [12 0 0 0 0])
  ("docstring" .
   [2 0 0 0 0 1 0 0 0])
  ("defbindings" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("*default-special-bindings*" .
   [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("timeout-length" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("serious-condition" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("timeout" .
   [2 0 0 0 0 0 1])
  ("-sbcl" .
   [1 0 0 0 0])
  ("make-condition" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":method" .
   [14 0 0 0 0 0 0])
  ("make-threading-support-error" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0])
  (":message" .
   [2 0 0 0 0 0 0 0])
  ("message" .
   [5 0 0 0 0 0 0])
  ("bordeaux-mp-condition" .
   [1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0])
  ("*features*" .
   [0 0 0 0 0 0 1 0 0 0])
  (":bordeaux-threads" .
   [0 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0])
  ("pushnew" .
   [1 0 0 0 0 0 0])
  ("mark-supported" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("*supports-threads-p*" .
   [1 0 0 0 0 2 0 0 1 0 0 0 0 0 0 0 0 0 0 0])
  ("open" .
   [2 0 0 0])
  ("fdimg" .
   [3 0 0 0 0])
  ("strncmp" .
   [1 0 0 0 0 0 0])
  ("webpage" .
   [2 0 0 0 0 0 0])
  ("fork" .
   [1 0 0 0])
  ("sin_len" .
   [1 0 0 0 0 0 0])
  ("fd_client" .
   [4 0 0 0 0 0 0 0 2])
  ("close" .
   [8 0 0 0 0])
  ("htons" .
   [1 0 0 0 0])
  ("sin_port" .
   [1 0 0 0 0 0 0 0])
  ("INADDR_ANY" .
   [1 0 0 0 0 0 0 0 0 0])
  ("s_addr" .
   [1 0 0 0 0 0])
  ("sin_addr" .
   [2 0 0 0 0 0 0 0])
  ("server_addr" .
   [2 0 0 0 0 0 0 0 0 0 1])
  ("AF_INET" .
   [4 0 0 0 1 0 0])
  ("fd_server" .
   [4 0 1 0 1 0 1 1 1])
  ("client_addr" .
   [1 0 0 0 1 0 0 0 0 0 0])
  ("s" .
   [6])
  ("sockaddr_in" .
   [2 0 0 0 0 0 0 0 0 0 0])
  ("fcntl.h" .
   [2 0 0 0 0 0 0])
  ("complex.h" .
   [0 0 0 0 0 1 0 0 0])
  ("err_sys" .
   [1 0 0 0 0 0 0])
  ("host" .
   [3 0 0 0])
  ("argc" .
   [2 0 0 0])
  ("hint" .
   [1 0 0 0])
  ("aip" .
   [1 0 0])
  ("ailist" .
   [1 0 0 0 0 0])
  ("addrinfo" .
   [2 0 0 0 0 0 0 0])
  ("string.h" .
   [4 0 0 0 0 0 0 1])
  ("file_ptr" .
   [1 0 0 0 0 0 0 0])
  ("pclose" .
   [1 0 0 0 0 0])
  ("strlen" .
   [2 0 0 0 0 0])
  ("send" .
   [1 0 0 0])
  ("strerror" .
   [1 0 0 0 0 0 0 0])
  ("sprintf" .
   [2 0 0 0 0 0 0])
  ("set_closeexec" .
   [0 0 0 0 0 0 0 0 1 0 0 0 0])
  ("errno" .
   [8 0 0 0 0])
  ("syslog" .
   [3 0 0 0 0 0])
  ("n" .
   [3])
  ("client_fd" .
   [0 0 0 0 0 1 3 0 0])
  ("FILE" .
   [2 0 0 0])
  ("sockfd" .
   [20 0 0 0 1 0])
  ("socklen_t" .
   [2 0 0 0 0 0 0 1 0])
  ("sockaddr" .
   [4 0 0 0 0 0 0 0])
  ("HOST_NAME_MAX" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0])
  ("BUFLEN" .
   [2 0 0 2 0 0])
  ("socket" .
   [20 0 0 0 0 0])
  ("libsys" .
   [1 0 0 0 0 0])
  ("libc.so" .
   [1 0 0 0 0 0 0])
  ("getcwd" .
   [1 0 0 0 0 0])
  ("threads" .
   [0 0 0 0 0 0 1])
  ("tsptr" .
   [1 0 0 0 0])
  ("mutex" .
   [2 0 0 0 0])
  ("pthread_mutex_t" .
   [3 0 0 0 0 0 0 0 0 0 0 0 0 0 2])
  ("destroy" .
   [1 0 0 0 0 0 0])
  ("attr" .
   [1 0 0 0])
  ("restrict" .
   [7 0 0 0 0 0 0 0])
  ("pthread_cond_t" .
   [5 0 0 0 0 0 0 0 1 0 0 0 1 0])
  ("allocated" .
   [1 0 0 0 0 0 0 0 0])
  ("static" .
   [1 0 0 0 0 0])
  ("Condition" .
   [1 0 0 0 0 0 0 0 2])
  ("<pthread" .
   [1 0 0 0 0 0 0 0])
  ("called" .
   [1 0 0 0 0 0])
  ("sleep" .
   [2 0 0 0 0])
  ("time" .
   [9 0 0 0])
  ("remtp" .
   [1 0 0 0 0])
  ("reqtp" .
   [1 0 0 0 0])
  ("struct" .
   [7 0 0 0 0 0])
  ("const" .
   [8 0 0 0 0])
  ("clock_nanosleep" .
   [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0])
  ("int" .
   [25 0 0])
  ("<time" .
   [1 0 0 0 0])
  ("member-equal" .
   [0 0 0 0 0 0 0 0 0 0 1 0])
  ("goal" .
   [4 0 0 0])
  ("achieve" .
   [1 0 0 0 0 0 0])
  ("goals" .
   [2 0 0 0 0])
  ("goal-stack" .
   [2 0 0 0 0 0 0 0 1 0])
  ("current-state" .
   [2 0 0 0 0 0 0 0 1 1 0 0 0])
  ("state" .
   [7 0 0 0 0])
  ("*tmp*" .
   [4 0 0 0 0])
  ("it" .
   [1 0])
  ("=>" .
   [2 0])
  ("~S" .
   [1 0])
  ("back" .
   [5 0 0 0])
  ("be" .
   [4 0])
  ("printing" .
   [1 0 0 0 0 0 0 0])
  ("pretty" .
   [1 0 0 0 0 0])
  ("~a" .
   [4 0])
  ("argument" .
   [10 0 0 0 0 0 0 0])
  ("float" .
   [2 0 0 0 0])
  ("ch-arr" .
   [3 0 0 0 0 0])
  ("fill-pointer" .
   [0 0 0 0 0 0 0 0 1 0 0 0])
  ("*standard-output*" .
   [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0])
  ("des" .
   [1 0 0])
  ("is" .
   [5 0])
  ("means" .
   [2 0 0 0 0])
  ("one" .
   [2 0 0])
  ("The Magic of 'format" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1])
  ("shape" .
   [1 0 0 0 0])
  ("hello.txt" .
   [4 0 0 0 0 0 0 0 0])
  ("line" .
   [11 0 0 0])
  ("test.txt" .
   [6 0 0 1 3 0 1 1])
  ("fin" .
   [10 0 0])
  ("/home/test.c" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("probe-file" .
   [4 0 0 0 0 1 0 0 0 0])
  ("*defaults*" .
   [0 0 0 1 2 0 0 0 0 0])
  ("cmd-flag" .
   [1 0 0 0 0 0 0 0])
  ("IN-PACKAGE" .
   [0 0 0 0 0 0 0 0 1 0])
  ("remote" .
   [1 0 0 0 0 0])
  ("command" .
   [1 0 0 0 0 0 0])
  ("following" .
   [0 0 0 0 1 0 0 0 0])
  ("directory" .
   [0 0 0 0 0 0 0 0 1])
  ("$HOME/" .
   [1 0 0 0 0 0])
  ("Add" .
   [2 0 0])
  ("SSH" .
   [2 0 0])
  ("choose" .
   [1 1 0 0 0 0])
  ("account" .
   [1 0 0 0 0 0 0])
  ("github" .
   [2 0 0 0 0 0])
  ("log" .
   [1 0 0])
  ("ssh" .
   [2 0 0])
  ("add" .
   [2 0 0])
  ("your" .
   [7 0 0 0])
  ("repository" .
   [0 0 0 0 2 1 0 0 0 0])
  ("Create" .
   [2 0 0 0 0 0])
  ("git" .
   [4 0 0])
  ("shell" .
   [4 0 0 0 0])
  ("file" .
   [2 0 0 0])
  ("config" .
   [1 0 0 0 0 0])
  (":aserve" .
   [1 0 0 0 0 0 0])
  ("getpgid" .
   [1 0 0 0 0 0 0])
  ("status" .
   [4 0 0 0 0 0])
  ("_new" .
   [1 0 0 0])
  ("QWidget" .
   [0 0 0 1 1 0 0])
  ("window" .
   [3 0 0 0 0 1])
  (":qt-test" .
   [2 0 0 0 0 0 0 0])
  (":qt" .
   [10 0 0])
  ("num" .
   [3 0 0])
  ("va_list" .
   [1 0 0 0 0 0 0])
  ("sum" .
   [5 0 0])
  ("isalnum" .
   [1 0 0 0 0 0 0])
  ("stdout" .
   [2 0 0 0 0 0])
  ("fputc" .
   [1 0 0 0 0])
  ("pstr" .
   [9 0 0 0])
  ("inttypes.h" .
   [1 0 0 0 0 0 0 0 0 0])
  ("ignorable" .
   [1 0 0 0 0 0 0 1 0])
  ("declare" .
   [14 0 0 0 0 0 0])
  ("genhash:hashmap" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("new-hash-map" .
   [2 0 0 0 0 0 0 0 1 1 0 0])
  ("mal-assoc" .
   [1 0 0 0 0 0 0 0 0])
  ("types:mal-hash-map-p" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0])
  ("mal-map?" .
   [1 0 0 0 0 0 0 0])
  ("hash-map-value" .
   [2 0 0 0 0 0 0 0 1 0 0 1 0 0])
  ("types:make-mal-hash-map" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0])
  ("genhash:hashref" .
   [4 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("do" .
   [44 0])
  ("cddr" .
   [3 0 0 0])
  ("by" .
   [10 0])
  ("types:make-mal-value-hash-table" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0])
  ("hash-map" .
   [5 0 0 0 0 0 0 0])
  ("mal-hash-map" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("types:mal-vector-p" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("mal-vector?" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("types:make-mal-vector" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("elements" .
   [5 0 0 0 0 0 0 1])
  ("mal-vector" .
   [1 0 0 0 0 0 0 0 0 0])
  ("types:make-mal-keyword" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0])
  ("types:mal-keyword-p" .
   [0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0])
  ("mal-keyword" .
   [1 0 0 0 0 0 0 0 0 0 1])
  ("types:mal-symbol-p" .
   [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0])
  ("types:make-mal-symbol" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("mal-symbol" .
   [1 0 0 0 0 0 0 0 0 1])
  ("not" .
   [6 0 0])
  ("mal-false?" .
   [1 0 0 0 0 0 0 0 0 0])
  ("types:mal-boolean-p" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0])
  ("mal-true?" .
   [1 0 0 0 0 0 0 0 0])
  ("types:mal-nil-p" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("mal-nil?" .
   [1 0 0 0 0 0 0 0])
  ("mal-map" .
   [1 0 0 0 0 0 0])
  ("butlast" .
   [1 0 0 0 0 0 0])
  ("butlast-args" .
   [1 0 0 0 0 0 0 0 0 0 1 0])
  ("last" .
   [3 0 0 0])
  ("final-arg" .
   [1 0 0 1 0 0 0 0 0])
  ("values" .
   [25 0 1 0 0 0])
  ("a" .
   [2])
  ("mal-apply" .
   [1 0 0 0 0 0 0 0 0])
  ("types:mal-user-exception" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0])
  ("mal-throw" .
   [1 0 0 0 0 0 0 0 0])
  ("rest" .
   [4 0 0 0])
  ("types:make-mal-list" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("mal-rest" .
   [1 0 0 0 0 0 0 0])
  ("types:make-mal-nil" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("first" .
   [14 0 0 0 0])
  ("mal-first" .
   [1 0 0 0 0 0 0 0 0])
  (":sequence" .
   [0 0 0 0 0 1 0 0 0])
  (":index" .
   [1 0 0 0 0 0])
  ("mal-value" .
   [2 0 0 0 0 0 0 0 0])
  ("length" .
   [17 0 0 0 0 0])
  (":size" .
   [1 0 0 0 0])
  ("index-error" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("nth" .
   [1 0 0])
  ("or" .
   [22 0])
  ("index" .
   [4 0 0 1 1])
  ("sequence" .
   [4 0 0 0 6 0 0 0])
  ("mal-nth" .
   [1 0 0 0 0 0 0])
  ("lists" .
   [1 0 0 0 0])
  ("mal-concat" .
   [1 0 0 0 0 0 0 0 0 0])
  ("map" .
   [9 0 0])
  ("mal-cons" .
   [1 0 0 0 0 0 0 0])
  ("append" .
   [8 0 0 0 0 0])
  ("args" .
   [14 0 0 0])
  ("mal-swap!" .
   [1 0 0 0 0 0 0 0 0])
  ("mal-reset!" .
   [1 0 0 0 0 0 0 0 0 0])
  ("types:fn" .
   [0 0 0 0 0 0 0 2])
  ("mal-deref" .
   [1 0 0 0 0 0 0 0 0])
  ("types:mal-atom-p" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("wrap-boolean" .
   [5 0 0 0 0 0 1 0 2 0 0 0])
  ("mal-atom?" .
   [1 0 0 0 0 0 0 0 0])
  ("types:make-mal-atom" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("mal-atom" .
   [1 0 0 0 0 0 0 0])
  ("read-file-string" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("types:apply-unwrapped-values" .
   [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("filename" .
   [2 0 0 0 0 0 0 0])
  ("mal-slurp" .
   [1 0 0 0 0 0 0 0 0])
  ("reader:read-str" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("mal-read-string" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (">=" .
   [2 0])
  ("mal->=" .
   [1 0 0 0 0 0])
  ("types:apply-unwrapped-values-prefer-bool" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0])
  ("value2" .
   [4 0 0 0 0 0])
  ("value1" .
   [4 0 0 0 0 0])
  ("mal->" .
   [1 0 0 0 0])
  ("存储空间的安全" .
   [0 1 0 0 0 0 0])
  ("证书处理器" .
   [0 0 1 0 0])
  ("Key-store" .
   [0 0 0 0 0 0 0 1 0])
  ("Key-" .
   [0 0 0 1])
  ("Key-random" .
   [1 0 0 0 0 0 0 0 0 0])
  ("硬件安全模块" .
   [2 0 0 0 0 0])
  ("SDL.h" .
   [2 0 0 0 0])
  ("SDL2/" .
   [0 0 0 2 0])
  (":external-format" .
   [3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("character" .
   [7 0 0 1 5 0 0 0 0])
  (":element-type" .
   [3 0 0 0 0 0 0 3 0 1 0 1 0])
  (":if-exists" .
   [0 0 0 0 1 0 0 0 0 0])
  (":output" .
   [2 0 0 0 0 0 0])
  (":direction" .
   [4 0 0 0 0 0 0 0 0 0])
  ("/tmp/foo.txt" .
   [0 0 0 0 0 0 0 1 0 1 0 0])
  ("with-open-file" .
   [1 0 0 0 1 0 0 2 0 0 0 1 0 0])
  ("write-byte" .
   [1 0 0 0 0 0 0 0 0 0])
  ("coerce" .
   [3 0 0 0 2 0])
  (":vec" .
   [1 0 0 0])
  (":test-package" .
   [0 0 0 0 0 0 0 0 0 0 1 0 0])
  (":foo" .
   [4 0 0 0])
  (":cl-user" .
   [12 0 0 0 0 0 0 0])
  (":both" .
   [1 0 0 0 0])
  ("defpackage" .
   [15 0 0 0 0 0 0 0 0 0])
  (":graph" .
   [7 0 0 0 0 0])
  (":tree" .
   [6 0 0 0 0])
  (":export" .
   [3 0 0 0 0 0 0])
  (":use" .
   [12 0 0 0])
  ("tree" .
   [12 0 0 0])
  (":bio" .
   [4 0 0 0])
  ("font-family-list" .
   [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0])
  ("ensure" .
   [2 0 0 0 0 0])
  ("use-package" .
   [5 0 0 0 0 0 2 0 1 0 0])
  ("Storage" .
   [1 0 0 0 0 0 0])
  ("public" .
   [2 0 0 0 0 0])
  ("Validity" .
   [1 0 0 0 0 0 0 0])
  ("performed" .
   [0 0 0 0 0 1 0 0 0])
  ("operations" .
   [1 0 0 0 0 0 0 0 0 0])
  ("Use" .
   [1 0 0])
  ("Structure" .
   [1 0 0 0 0 0 0 0 0])
  ("internal" .
   [1 0 0 0 0 0 0 0])
  ("bytes" .
   [2 0 0 0 0])
  ("private" .
   [1 0 0 0 0 0 0])
  ("Data" .
   [0 0 0 2])
  ("origin" .
   [1 0 0 1 0 0])
  ("data" .
   [7 0 0 0])
  ("certification" .
   [1 0 0 1 0 0 0 0 0 0 0 0 0])
  ("Identifier" .
   [1 0 2 1 1 0 0 0 0 0])
  ("may" .
   [3 0 0])
  ("this" .
   [3 0 0 0])
  ("used" .
   [3 0 0 0])
  ("Algorithm" .
   [2 0 0 0 0 0 0 0 0])
  ("Discription" .
   [0 0 0 0 0 1 0 0 0 0 0])
  ("Name" .
   [2 0 0 0])
  ("Key" .
   [7 0 0])
  ("Module" .
   [2 0 0 0 0 0])
  ("Command" .
   [1 0 0 0 0 0 0])
  ("|-----+------+-------------|" .
   [0 3 6 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("Table" .
   [4 0 0 0 0])
  ("Partition" .
   [1 0 0 0 0 0 0 0 0])
  ("Service" .
   [2 0 0 0 0 0 0])
  ("Hardware" .
   [0 0 0 0 0 0 1 0])
  ("Secure" .
   [5 0 0 0 0 0])
  ("HSM" .
   [7 0 0])
  ("|---+---+---|" .
   [0 0 0 0 0 0 0 0 0 0 0 0 2])
  ("|-----+----------------------------------------------------------------+-----------------------------------------------|" .
   [0 0 2 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("fact" .
   [4 0 0 0])
  ("facilities" .
   [0 0 0 0 0 0 1 0 0 0])
  ("OVERSEE" .
   [3 0 0 0 0 0 0])
  ("Applications" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("Requirement" .
   [0 0 0 0 0 0 0 1 0 0 0])
  ("operating" .
   [1 0 0 0 0 0 0 0 0])
  ("Operating" .
   [1 0 0 0 0 0 0 0 0])
  ("Isolation" .
   [1 0 0 0 0 0 0 0 0])
  ("****" .
   [48 0 0 0])
  ("Layer" .
   [1 0 0 0 0])
  ("Pi" .
   [1 0])
  ("Lambda" .
   [0 0 0 0 0 1])
  ("secure" .
   [2 0 0 0 0 0])
  ("***" .
   [105 1 3])
  ("oversee" .
   [1 0 0 0 0 0 0])
  ("light-out" .
   [2 0 0 0 0 0 0 0 0])
  ("PORT" .
   [1 0 0 0])
  ("names" .
   [2 0 0 0 0])
  ("IDENTIFIER" .
   [0 0 0 0 0 0 1 0 0 0])
  ("TABLE_PREFIX" .
   [0 0 0 0 0 1 0 0 0 0 0 0])
  ("NAME" .
   [1 0 0 0])
  ("TYPE" .
   [1 0 0 0])
  ("ntoken" .
   [5 0 0 0 0 0])
  ("vtoken" .
   [3 0 0 0 0 0])
  ("yytext" .
   [2 0 0 0 1 0])
  ("yylineno" .
   [1 0 0 0 0 0 0 0])
  ("printf" .
   [35 0 0 0 0 1])
  ("COLON" .
   [1 0 0 0 0])
  ("yylex" .
   [4 0 0 0 1])
  ("count" .
   [6 0 0 0 0])
  ("main" .
   [10 0 0 0])
  ("unistd.h" .
   [4 0 0 0 3 0 0 4])
  ("stdio.h" .
   [10 0 0 1 1 0 6])
  ("when" .
   [30 0 0 0])
  ("set-contains" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("gethash" .
   [27 0 0 0 0 0 0])
  ("set" .
   [11 0 0])
  ("element" .
   [9 0 0 0 1 0 0])
  ("make-hash-set" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0])
  ("setf" .
   [68 0 0 0])
  ("apply" .
   [10 0 0 0 0])
  ("REHASH-THRESHOLD" .
   [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0])
  ("1.5" .
   [1 0 0])
  ("size" .
   [6 0 0 0])
  ("eql" .
   [21 0 0])
  ("&key" .
   [28 0 0 0])
  ("make-hash-table" .
   [6 0 0 0 0 0 0 0 0 0 0 2 1 2 0])
  ("all" .
   [3 0 0])
  ("&rest" .
   [29 0 0 0 0])
  ("world" .
   [29 0 0 0 0])
  ("sety" .
   [1 0 0 0])
  ("setx" .
   [1 0 0 0])
  ("funcall" .
   [15 0 0 0 0 0 0])
  ("null" .
   [12 0 0 0])
  ("keys" .
   [2 0 0 0])
  ("key" .
   [32 0 5])
  ("set-equal" .
   [3 0 0 0 0 0 0 0 0])
  ("set-exclusive-or" .
   [1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0])
  ("adjoin" .
   [2 0 0 0 0 0])
  ("subsetp" .
   [2 0 0 0 0 0 0])
  ("set-difference" .
   [0 0 0 0 0 0 0 0 1 0 0 0 0 0])
  ("*q*" .
   [8 0 0])
  ("*p*" .
   [10 0 0])
  ("defparameter" .
   [15 0 0 0 0 2 1 1 1 0 0 0])
  ("princ" .
   [41 0 0 0 0])
  ("across" .
   [5 0 0 0 0 0])
  ("ldiff" .
   [1 0 0 0 0])
  ("*tail*" .
   [0 0 0 0 1 3])
  ("cdr" .
   [10 0 0])
  ("my-tailp" .
   [5 0 0 0 0 0 0 1])
  ("obj" .
   [6 0 0])
  ("*list*" .
   [5 0 0 0 4 2])
  ("collect" .
   [16 0 0 0 0 0 0])
  ("start" .
   [20 0 0 0 0])
  ("from" .
   [16 0 0 0])
  ("for" .
   [49 0 0])
  ("range" .
   [4 0 0 0 0])
  ("loop" .
   [97 0 0 0])
  ("pprint" .
   [1 0 0 0 0 0])
  ("matrix" .
   [7 0 0 0 0 0])
  ("transpose" .
   [2 0 0 0 0 0 0 0 0])
  ("INTEGER-TO-BIT-LIST" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0])
  ("res" .
   [14 0 0])
  ("int-num" .
   [6 0 0 0 0 0 0])
  ("string" .
   [33 0 0 0 0 1])
  ("integer" .
   [17 0 0 0 0 0 1])
  ("INTEGER" .
   [0 0 0 0 1 0 1])
  ("nil" .
   [96 0 0])
  ("format" .
   [117 0 0 1 0 0])
  ("parse-integer" .
   [3 0 0 0 0 0 0 0 0 0 0 0 0])
  ("integer-to-bit-list" .
   [3 0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0])
  ("list" .
   [58 0 0 1])
  ("list*" .
   [3 0 0 0 0])
  ("make-list" .
   [2 0 0 0 0 0 0 0 0])
  ("var" .
   [44 0 0])
  ("defvar" .
   [9 0 0 0 0 0])
  ("type-of" .
   [4 0 0 0 0 0 0])
  ("atom" .
   [13 0 0 0])
  ("number" .
   [11 0 0 0 0 0])
  ("cons" .
   [20 0 0 0])
  ("check-type" .
   [15 0 0 0 0 1 0 0 0 0])
  ("nil_Q" .
   [1 0 0 0 0])
  ("'zenburn" .
   [1 0 0 0 0 0 0 0])
  ("'leuven" .
   [1 0 0 0 0 0 0])
  ("interactive" .
   [4 0 0 0 0 0 0 0 0 0 1])
  ("load-theme" .
   [2 0 0 0 0 0 0 0 0 0])
  ("defun" .
   [160 0 0 0 0])
  ("bind" .
   [1 0 0 0])
  ("TOE" .
   [1 0 0])
  ("*" .
   [67])
  ("Objectives" .
   [0 0 0 0 0 0 0 1 0 0])
  ("Security" .
   [7 0 0 0 0 0 0 0])
  ("emacs-lisp" .
   [4 0 0 0 0 0 0 0 1 0])
  ("describe" .
   [16 0 0 3 3 0 1 0])
  ("copy-symbol" .
   [2 0 0 0 0 0 0 0 0 0 0])
  ("print" .
   [17 0 0 0 0])
  ("make-symbol" .
   [4 0 0 0 0 0 0 0 0 0 0])
  ("foo" .
   [6 0 0])
  ("test" .
   [30 0 0 0])
  ("*s*" .
   [3 0 0])
  ("unintern" .
   [1 0 0 0 0 0 0 0])
  ("new" .
   [4 0 0])
  ("symbol" .
   [15 0 0 0 1 0])
  ("with" .
   [10 0 0 0])
  ("the" .
   [62 0 0])
  ("specified" .
   [1 0 0 0 0 0 0 0 0])
  ("uninterned" .
   [1 0 0 0 0 0 0 0 0 0])
  ("can" .
   [6 0 0])
  ("copy" .
   [3 0 0 0])
  ("'hello" .
   [1 0 0 0 0 0])
  ("to" .
   [24 0])
  ("properties" .
   [5 0 0 0 0 0 0 0 0 0])
  ("**" .
   [65 103])
  ("FIND-PACKAGE" .
   [0 0 0 0 0 0 0 0 0 1 0 0])
  ("find-package" .
   [5 0 0 0 0 1 0 0 0 0 0 0])
  (":cl" .
   [16 0 0])
  ("remove-duplicates" .
   [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0])
  ("hello" .
   [50 0 0 0 0])
  ("string-capitalize" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("mapcar" .
   [22 0 0 0 0 0])
  ("1+" .
   [1 0])
  ("lambda" .
   [51 0 0 1 0 0])
  ("logand" .
   [1 0 0 0 0 0])
  ("Sequence" .
   [0 0 0 0 0 0 0 1])
  ("lisp" .
   [16 0 0 0])
  ("find" .
   [7 0 0 0])
  ("'char-equal" .
   [0 0 0 0 0 0 0 0 0 1 0])
  ("search" .
   [2 0 0 0 0 0])
  ("abcde" .
   [2 0 0 0 0])
  ("bcd" .
   [1 0 0])
  ("ABCDE" .
   [1 0 0 0 0])
  (":test" .
   [23 0 0 0 1])
  ("char-equal" .
   [1 0 0 0 0 0 0 0 0 0])
  ("*print-base*" .
   [0 0 0 0 0 0 1 0 0 0 0 0])
  ("co" .
   [1 1])
  ("h" .
   [4])
  ("glib-2.0/" .
   [0 0 0 1 1 1 0 2 0])
  ("glib.h" .
   [3 0 0 0 0 0])
  ("forms" .
   [11 0 0 0 1])
  ("cl-html" .
   [3 0 0 0 0 0 0])
  ("form" .
   [14 0 0 0])
  ("stream" .
   [40 0 0 0 0 0])
  ("out" .
   [16 0 0])
  ("write-line" .
   [8 0 0 0 0 0 0 0 1 0])
  ("car" .
   [16 0 0])
  ("html" .
   [4 0 0 0])
  ("cl-readline" .
   [2 0 0 0 0 0 0 0 0 0 0])
  (":cl-readline" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("CL-READLINE" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("in-package" .
   [36 0 2 1 0 0 1 2 1 0])
  ("how" .
   [1 0 0])
  ("and" .
   [25 0 0])
  ("system" .
   [3 0 0 0 0 0])
  ("HM" .
   [1 0])
  ("specifies" .
   [0 0 0 0 0 0 0 0 1])
  ("of" .
   [8 0])
  ("actions" .
   [1 0 0 0 0 0 0])
  ("on" .
   [11 0])
  ("fontset-list" .
   [1 0 0 0 0 0 0 0 0 1 0 0])
  ("fontset" .
   [1 0 0 0 0 0 0])
  ("font" .
   [1 0 0 0])
  ("set-default-font" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("expr" .
   [7 0 0 0])
  ("if" .
   [28 0])
  ("expression" .
   [3 0 0 0 0 0 0 0 0 0])
  ("while" .
   [2 0 0 0 0])
  ("identifier" .
   [1 0 1 0 1 0 0 0 0 0])
  ("derivative" .
   [1 0 0 0 0 0 0 0 0 0])
  ("mpc_parser_t" .
   [1 0 0 0 0 0 0 0 0 0 1 0])
  ("mpc_new" .
   [2 0 0 0 0 0 0])
  ("Chinese" .
   [1 0 0 0 0 0 0])
  ("Support" .
   [1 0 0 0 0 0 0])
  ("defmacro" .
   [27 0 0 0 0 0 0 0])
  ("type" .
   [41 0 0 0])
  ("types" .
   [3 0 0 0 0])
  ("define-mal-type" .
   [3 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("progn" .
   [10 0 0 0 0])
  ("define-mal-types" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("keyword" .
   [3 0 0 0 0 2 1])
  ("boolean" .
   [2 0 0 0 0 0 0])
  ("vector" .
   [13 0 0 0 0 1])
  ("fn" .
   [11 0])
  ("builtin-fn" .
   [1 0 0 0 0 0 0 0 0 0])
  ("macroexpand-1" .
   [5 0 0 0 0 0 1 0 0 0 0 0 1])
  ("in" .
   [32 0])
  ("sym" .
   [24 0 0])
  ("Process" .
   [2 0 0 0 0 0 0])
  ("The" .
   [6 0 0])
  ("user" .
   [26 0 0 0])
  ("which" .
   [2 0 0 0 0])
  ("would" .
   [1 0 0 0 0])
  ("like" .
   [1 0 0 0])
  ("Since" .
   [1 0 0 0 0])
  ("authentication" .
   [6 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("Platform" .
   [0 0 0 0 0 0 1 1])
  ("platform" .
   [7 0 0 0 0 0 0 0])
  ("challenge" .
   [2 0 0 0 0 0 0 0 0])
  ("based" .
   [3 0 0 0 0])
  ("t" .
   [9])
  ("action" .
   [3 0 0 0 0 0])
  ("information" .
   [2 0 0 0 0 0 0 0 0 0 0])
  ("unique" .
   [1 0 0 0 0 0])
  ("selected" .
   [1 0 0 0 0 0 0 0])
  ("onetime" .
   [1 0 0 0 0 0 0])
  ("value" .
   [60 0 0 0 1])
  ("his" .
   [3 0 0])
  ("identity" .
   [8 0 0 0 0 0 0 0])
  ("As" .
   [0 2])
  ("Afterwards" .
   [0 0 0 0 0 1 0 0 0 0])
  ("authority" .
   [1 0 0 0 0 0 0 0 0])
  ("given" .
   [1 0 0 0 0])
  ("response" .
   [4 0 0 0 0 1 0 0])
  ("authenticated" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0])
  ("User" .
   [1 0 0 0])
  ("only" .
   [2 0 0 0])
  ("execute" .
   [2 0 0 0 0 0 0])
  ("Authentication" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("has" .
   [1 0 0])
  ("already" .
   [1 0 0 0 0 0 0])
  ("authenticate" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("access" .
   [2 0 0 0 0 2])
  ("driver" .
   [1 0 0 0 0 0])
  ("enters" .
   [1 0 0 0 0 0])
  ("into" .
   [6 0 0 0])
  ("calculates" .
   [1 0 0 0 0 0 0 0 0 0])
  ("hash" .
   [3 0 0 0])
  ("password" .
   [2 0 0 0 0 0 1 0])
  ("matches" .
   [1 0 0 0 0 0 0])
  ("stored" .
   [2 0 0 0 0 0])
  ("process" .
   [2 0 0 0 0 0 0])
  ("Authorization" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0])
  ("Section" .
   [9 0 0 0 0 0 0])
  ("Chapter" .
   [4 0 0 0 0 0 0])
  ("Abstract" .
   [1 0 0 0 0 0 0 0])
  ("System" .
   [3 0 0 0 0 0])
  ("Design" .
   [1 0 0 0 0 0])
  ("exit" .
   [22 0 0 0])
  ("find-symbol" .
   [9 0 0 0 0 0 1 0 0 0 0])
  ("HELLO" .
   [4 0 0 0 0])
  ("export" .
   [1 0 0 0 0 0])
  ("QUUX" .
   [1 0 0 0])
  (":quux" .
   [1 0 0 0 0])
  ("being" .
   [7 0 0 0 0])
  ("each" .
   [4 0 0 0])
  ("external-symbol" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("do-symbols" .
   [2 0 0 0 0 0 0 0 0 0])
  ("char" .
   [20 0 0 0])
  ("symbol-name" .
   [4 0 0 0 0 0 0 0 0 0 0])
  ("return" .
   [16 0 0 0 0 0])
  ("do-external-symbols" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":FOO" .
   [1 0 0 0])
  (":linalg" .
   [1 0 0 0 0 0 0])
  ("cols" .
   [1 0 0 0])
  (":initarg" .
   [25 0 0 0 0 0 0 0])
  (":initform" .
   [14 0 0 0 0 0 0 0 0])
  ("error" .
   [24 0 0 0 1])
  (":reader" .
   [17 0 0 0 0 0 0])
  (":data" .
   [3 0 0 0 0])
  ("matrix-cols" .
   [7 0 0 0 0 2 1 0 0 1 2])
  ("matrix-rows" .
   [7 0 0 0 0 0 0 0 0 0 2])
  ("assert" .
   [3 0 0 0 0 0])
  ("matrix-data" .
   [6 0 0 0 0 0 0 0 0 0 0])
  ("generator" .
   [3 0 0 0 0 0 0 0 0])
  ("dotimes" .
   [7 0 0 0 0 0 0])
  ("make-array" .
   [5 0 0 0 0 0 0 0 0 0])
  ("single-float" .
   [0 0 0 0 0 1 0 0 0 0 0 0])
  ("matrix-at" .
   [5 0 0 0 0 0 0 0 0])
  ("aref" .
   [16 0 0 0])
  (":rows" .
   [2 0 0 0 0])
  (":cols" .
   [2 0 0 0 0])
  ("make-instance" .
   [7 0 0 0 0 0 0 0 0 0 0 0 0])
  (":generator" .
   [1 0 0 0 0 0 0 0 0 0])
  ("health" .
   [1 0 0 0 0 0])
  ("mvprintw" .
   [6 0 0 1 0 0 2 0])
  ("newPlayer" .
   [0 0 0 0 0 2 1 1 0])
  ("xPosition" .
   [3 0 0 5 4 0 0 0 0])
  ("x" .
   [1])
  ("yPosition" .
   [5 0 1 4 3 0 0 0 0])
  ("Player" .
   [6 0 0 0 0 0])
  ("move" .
   [1 0 0 0])
  ("getch" .
   [1 0 0 0 0])
  ("ch" .
   [3 0])
  ("handleInput" .
   [0 0 0 0 0 0 1 0 1 0 0])
  ("input" .
   [5 0 0 0 0])
  ("playerMove" .
   [1 0 0 0 0 0 0 0 1 0])
  ("m" .
   [3])
  ("newY" .
   [5 0 0 0])
  ("newX" .
   [5 0 0 0])
  ("space" .
   [1 0 0 0 0])
  ("mvinch" .
   [1 0 0 0 0 0])
  ("Room" .
   [11 0 0 1])
  ("height" .
   [3 0 0 2 1 0])
  ("width" .
   [3 0 0 2 1])
  ("createRoom" .
   [1 0 0 0 0 0 0 2 1 0])
  ("rooms" .
   [6 0 0 0 0])
  ("malloc" .
   [4 0 0 0 2 0])
  ("r" .
   [1])
  ("newRoom" .
   [1 0 0 0 4 0 1])
  ("room" .
   [15 0 0 0])
  ("drawRoom" .
   [1 0 0 0 0 0 0 0])
  ("BLP\346\250\241\345\236\213" .
   [0 0 0 1 0])
  ("macrop" .
   [0 0 0 0 0 10])
  ("*****" .
   [12 0 0 0 0])
  ("google" .
   [2 0 0 0 0 0])
  ("com" .
   [3 0 0])
  ("USERNAME" .
   [1 0 0 0 0 0 0 0])
  ("cutail" .
   [1 0 0 0 0 0])
  ("startup: " .
   [0 0 0 0 0 0 0 0 1])
  ("加密功能" .
   [1 0 0 0])
  ("******" .
   [6 0 0 0 0 0])
  ("|-----------\\|" .
   [0 0 0 1 0 0 0 0 0 0 0 0 0 0])
  ("加密功能模块" .
   [1 0 0 0 0 0])
  ("密钥管理模块" .
   [1 0 0 0 0 0])
  ("安全存储模块" .
   [1 0 0 0 0 0])
  ("授权认证模块" .
   [1 0 0 0 0 0])
  (":mal-data-value" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":mal-data-type" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":mal-data-meta" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":mal-data-attrs" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":number" .
   [1 0 0 0 0 0 0])
  (":make-mal-number" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":mal-number-p" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0])
  (":booleanp" .
   [0 0 0 0 0 0 0 0 1])
  (":make-mal-boolean" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":mal-boolean-p" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":nil" .
   [1 0 0 0])
  (":make-mal-nil" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0])
  (":mal-nil-p" .
   [1 0 0 0 0 0 0 0 0 0])
  (":string" .
   [1 0 0 0 0 0 0])
  (":make-mal-string" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":mal-string-p" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0])
  (":symbol" .
   [3 0 0 0 0 0 0])
  (":make-mal-symbol" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":keyword" .
   [2 0 0 0 0 0 0 0])
  (":make-mal-keyword" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":list" .
   [1 0 0 0 0])
  (":make-mal-list" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":mal-list-p" .
   [1 0 0 0 0 0 0 0 0 0 0])
  (":vector" .
   [1 0 0 0 0 0 0])
  (":make-mal-vector" .
   [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0])
  (":mal-vector-p" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0])
  (":hash-map" .
   [1 0 0 0 0 0 0 0 0])
  (":make-mal-hash-map" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":mal-hash-map-p" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":atom" .
   [1 0 0 0 0])
  (":make-mal-atom" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":mal-atom-p" .
   [1 0 0 0 0 0 0 0 0 0 0])
  (":builtin-fn" .
   [1 0 0 0 0 0 0 0 0 0 0])
  (":make-mal-builtin-fn" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0])
  (":mal-builtin-fn-p" .
   [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0])
  (":fn" .
   [1 0 0])
  (":make-mal-" .
   [0 0 0 0 0 0 0 0 0 1])
  (":mal-fn-p" .
   [1 0 0 0 0 0 0 0 0])
  (":any" .
   [1 0 0 0])
  (":mal-nil" .
   [1 0 0 0 0 0 0 0])
  (":mal-true" .
   [1 0 0 0 0 0 0 0 0])
  (":mal-false" .
   [1 0 0 0 0 0 0 0 0 0])
  (":make-mal-value-hash-table" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0])
  (":mal-exception" .
   [0 0 0 0 0 0 0 0 0 0 1 0 0 0])
  (":mal-runtime-exception" .
   [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0])
  (":mal-user-exception" .
   [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0])
  (":mal-error" .
   [1 0 0 0 0 0 0 0 0 0])
  (":wrap-value" .
   [1 0 0 0 0 0 0 0 0 0 0])
  (":unwrap-value" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0])
  (":apply-unwrapped-values" .
   [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":apply-unwrapped-values-prefer-bool" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0])
  (":env" .
   [1 0 0 0])
  ("define-condition" .
   [12 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("undefined-symbol" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0])
  ("types:mal-runtime-exception" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0])
  (":report" .
   [5 0 0 0 0 0 0])
  ("condition" .
   [10 0 0 0 0 1 0 0 0])
  ("arity-mismatch" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("required" .
   [2 0 0 0 0 0 0 1])
  (":required" .
   [1 0 0 0 0 0 0 0 0])
  ("provided" .
   [1 0 0 0 0 2 0 0])
  (":provided" .
   [1 0 0 0 0 0 0 0 0])
  ("defstruct" .
   [1 0 0 0 0 0 0 0 0])
  ("mal-env" .
   [1 0 0 0 0 0 0])
  ("bindings" .
   [8 0 0 0 0 0 0 0])
  ("equal" .
   [4 0 0 0 0])
  (":read-only" .
   [2 0 0 0 0 0 0 0 0 0])
  ("parent" .
   [4 0 0 0 0 0])
  ("find-env" .
   [3 0 0 0 0 0 0 0])
  ("env" .
   [5 0 0])
  ("let" .
   [53 0 0])
  ("types:mal-data-value" .
   [15 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 2 0])
  ("mal-env-bindings" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0])
  ("mal-env-parent" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("cond" .
   [25 0 0 0])
  ("get-env" .
   [1 0 0 0 0 0 0])
  ("user-homedir-pathname" .
   [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("tokens" .
   [1 0 0 0 0 0])
  ("most-positive-fixnum" .
   [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0])
  ("mod" .
   [1 0 0])
  ("rem" .
   [1 0 0])
  ("include" .
   [3 0 0 0 0 0 7])
  ("read" .
   [6 0 0 0])
  ("STDIN_FILENO" .
   [0 0 0 0 0 0 0 0 1 0 0 1])
  ("BUFFSIZE" .
   [0 0 0 0 0 0 1 0])
  ("write" .
   [6 0 0 0 0])
  ("STDOUT_FILENO" .
   [1 0 0 0 0 1 2 0 0 0 0 0 1])
  ("buf" .
   [16 0 0])
  ("phrase" .
   [2 0 0 0 0 0])
  ("lst" .
   [2 0 0])
  ("generate" .
   [1 0 0 0 0 0 0 0])
  ("str" .
   [13 0 0])
  ("sentence" .
   [1 0 0 0 0 0 0 0])
  ("+my-pi+" .
   [0 0 0 2 0 0 0])
  ("circle-area" .
   [0 0 0 2 0 0 1 0 0 0 0])
  ("asdf:load-system" .
   [0 0 0 0 0 3 0 0 1 0 0 0 0 0 0 0])
  ("ql:quickload" .
   [6 0 5 8 2 0 11 2 8 0 2 0])
  (":UIOP/LAUNCH-PROGRAM" .
   [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0])
  (":uiop" .
   [2 0 0 0 0])
  (":cffi" .
   [5 0 0 0 0])
  (":or" .
   [2 0 0])
  ("libcurl" .
   [1 0 0 1 0 0 0])
  ("curl-code" .
   [0 0 0 0 2 0 0 1 0])
  ("defcfun" .
   [8 0 0 0 0 0 0])
  (":pointer" .
   [6 0 0 0 0 0 0 0])
  ("*EASY-HANDLE*" .
   [0 0 0 1 2 2 0 0 0 0 0 0 0])
  (":drakma" .
   [0 0 0 0 1 0 0])
  (":qt-libs" .
   [4 0 0 0 0 0 0 0])
  (":test-qt" .
   [1 0 0 0 0 0 0 0])
  (":cl-cffi-gtk-glib" .
   [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0])
  ("cl-cffi-gtk-glib" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0])
  ("cl-cffi-gtk-g" .
   [0 0 0 0 0 0 0 0 0 0 0 0 3])
  ("cl-cffi-gtk-" .
   [0 0 0 0 0 0 0 0 0 0 0 1])
  ("cl-cffi-gtk" .
   [0 0 0 0 0 0 0 0 0 0 1])
  (":cl-cffi-gtk" .
   [0 0 0 0 0 0 1 0 0 0 0 0])
  (":gtk-tutorial" .
   [0 0 0 0 0 0 0 1 0 0 0 0 0])
  ("example-simple-window" .
   [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("PRIO_PROCESS" .
   [0 0 0 0 0 1 0 0 0 0 0 0])
  ("nice" .
   [2 0 0 0])
  ("ldb" .
   [1 0 0])
  ("require" .
   [2 0 0 0 0 0 0])
  ("---" .
   [1 0 0])
  ("test-hello" .
   [0 0 0 0 0 0 0 0 1 0])
  ("peaches" .
   [2 0 0 0 0 0 0])
  (":wu-sugar" .
   [0 0 0 0 1 0 0 0 0])
  ("atan" .
   [2 0 0 0])
  ("pi" .
   [3 0])
  ("polar" .
   [3 0 0 0 0])
  ("len" .
   [4 0 0])
  ("theta" .
   [1 0 0 0 0])
  ("values-list" .
   [3 0 0 0 0 0 0 0 0 0 0])
  ("multiple-value" .
   [0 0 0 0 0 0 0 1 0 0 0 0 0 1])
  ("multiple-values-limit" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0])
  ("mv-prog1" .
   [0 0 1 0 0 0 0 0])
  ("multiple-value-list" .
   [3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("form1" .
   [1 0 0 0 0])
  ("gensym" .
   [7 0 0 0 0 0])
  ("formsym" .
   [2 0 0 0 0 0 0])
  ("vars" .
   [4 0 0 0])
  ("FORMS" .
   [1 0 0 0 0])
  ("@forms" .
   [2 0 0 0 0 0])
  ("mv-bind" .
   [3 0 0 0 0 0 0])
  ("macroexpand" .
   [7 0 0 0 0 2 0 1 0 0 0])
  ("multiple-value-bind" .
   [6 0 0 0 0 2 2 0 1 0 0 0 0 0 0 0 0 0 0])
  ("multiple-value-call" .
   [3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("mv-list" .
   [1 0 0 0 0 0 0])
  ("my-add" .
   [1 0 0 0 0 0])
  ("prin" .
   [0 0 0 1])
  ("catch" .
   [1 0 0 0 0])
  ("throw" .
   [2 0 0 0 0])
  ("sb-ext:disable-package-locks" .
   [1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("*name*" .
   [2 0 0 0 0 0])
  ("function-information" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("read-char" .
   [5 0 0 0 0 0 0 0 0])
  ("with-input-from-string" .
   [2 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("sin" .
   [3 0 0])
  ("test-fun" .
   [4 0 0 0 0 0 0 0])
  ("fun2" .
   [1 0 0 0])
  ("*default-path*" .
   [0 0 0 0 6 0 0 0 0 0 0 0 0 0])
  ("make-pathname" .
   [2 0 0 0 0 0 0 0 0 1 0 0 0])
  (":directory" .
   [1 0 0 0 0 0 1 0 0 0])
  (":absolute" .
   [0 0 0 0 1 0 0 0 0])
  ("merge-pathnames" .
   [3 0 0 0 0 0 0 0 0 0 1 0 0 0 0])
  ("hello.c" .
   [1 0 0 0 0 0 0])
  ("pathname" .
   [4 0 0 0 2 1 0 0])
  ("winpath" .
   [1 0 1 1 0 0 0])
  ("ensure-directories-exist" .
   [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("/home/wlisper/tmp/a/b/c/d" .
   [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("fout" .
   [8 0 0 0])
  ("file-length" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("symbol-package" .
   [0 0 0 0 0 3 0 0 0 0 0 0 0 0])
  ("dividor" .
   [3 0 0 0 0 0 0])
  ("DIVIDE-BY-ZERO" .
   [0 0 0 0 0 0 0 0 0 3 1 0 0 0])
  (":dividor" .
   [1 0 0 0 0 1 0 0])
  ("DIVIDE" .
   [0 0 0 0 3 0])
  ("divide" .
   [4 0 0 0 0 0])
  ("handler" .
   [2 0 0 0 0 0 0])
  ("handler-case" .
   [5 0 0 0 0 0 0 0 0 0 0 0])
  ("zerop" .
   [6 0 0 0 0])
  ("handler-bind" .
   [2 0 0 0 0 0 0 0 0 0 0 0])
  ("use-value" .
   [2 0 0 0 0 0 0 0 0])
  ("rh" .
   [2 0])
  ("fix" .
   [3 0 0])
  ("return-zero" .
   [2 0 0 0 0 0 0 0 0 0 0])
  ("ret" .
   [2 0 0])
  ("reinput" .
   [1 0 0 0 0 0 0])
  ("below" .
   [3 0 0 0 0])
  ("upfrom" .
   [1 0 0 0 0 0])
  ("upto" .
   [2 0 0 0])
  ("downfrom" .
   [2 0 0 0 0 0 0 0])
  ("b" .
   [2])
  ("step" .
   [3 0 0 0])
  ("downto" .
   [1 0 0 0 0 0])
  ("d" .
   [1])
  ("'cddr" .
   [1 0 0 0 0])
  ("*tb*" .
   [0 1 0 3])
  ("something" .
   [2 0 0 0 0 0 0 0 0])
  ("hash-table" .
   [1 0 0 0 0 0 0 0 0 1])
  ("symbols" .
   [1 0 0 0 0 0 0])
  ("present-symbols" .
   [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0])
  ("external-symbols" .
   [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0])
  ("then" .
   [5 0 0 0])
  ("FORCE-OUTPUT" .
   [0 0 0 0 0 1 0 0 0 0 0 0])
  ("initial-value" .
   [1 0 0 1 0 0 0 0 0 0 0 0 0])
  ("clause" .
   [1 0 0 0 0 0])
  ("repeat" .
   [2 0 0 0 0 1])
  ("->" .
   [1 0])
  ("variable" .
   [4 0 0 0 0 1 0 1])
  ("local" .
   [2 0 0 0 0])
  ("*func*" .
   [1 0 0 0 1 0])
  ("will" .
   [1 0 0 0])
  ("evaluated" .
   [1 0 0 0 0 0 0 0 0])
  ("refer" .
   [1 0 0 0 0])
  ("+" .
   [1])
  ("~a~%" .
   [11 0 0 0])
  ("item" .
   [2 0 0 0])
  ("*random*" .
   [1 0 0 0 0 0 0 1])
  ("counting" .
   [1 0 0 0 0 0 0 0])
  ("min" .
   [4 0 0])
  ("max" .
   [2 0 0])
  ("total" .
   [1 0 0 0 0])
  ("evens" .
   [0 0 0 0 1])
  ("odds" .
   [1 0 0 0])
  (":define-binary-type" .
   [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0])
  ("spec" .
   [8 0 0 0])
  ("name" .
   [54 0 0 1])
  ("as-keyword" .
   [0 0 0 0 0 0 1 1 0 0])
  ("define-binary-class" .
   [2 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0])
  ("slot->defclass-slot" .
   [0 0 0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 0 0])
  ("slots" .
   [10 0 0 0 1])
  ("read-value" .
   [13 0 0 0 0 0 0 0 0 1])
  ("iso-8859-1-string" .
   [1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0])
  ("defmethod" .
   [30 0 0 0 0 0 0 0 0])
  ("u1" .
   [4 0])
  ("id3-tag" .
   [1 0 0 0 0 1 0])
  ("major-version" .
   [0 0 0 0 0 1 0 1 0 0 0 0 0])
  ("revision" .
   [0 0 0 0 2 0 0 0])
  ("flags" .
   [6 0 0 0 0])
  ("frames" .
   [2 0 0 0 0 0])
  ("object" .
   [7 0 0 0 1 1])
  (":length" .
   [2 0 0 0 0 0 0])
  ("id3-frames" .
   [0 0 0 0 0 0 2 0 0 0])
  (":tag-size" .
   [0 0 0 0 1 0 0 0 0])
  ("id3-encoded-size" .
   [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0])
  ("normalize-slot-spec" .
   [0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("mklist" .
   [3 0 0 0 0 0])
  ("defclass" .
   [8 0 0 0 0 0 0 0])
  ("with-gensym" .
   [2 0 0 0 0 0 0 0 0 0 0])
  ("syms" .
   [4 0 0 0])
  ("typevar" .
   [4 0 0 0 0 0 0])
  ("streamvar" .
   [6 0 0 0 0 0 0 0 1])
  ("with-slots" .
   [1 0 0 0 0 0 0 0 0 2])
  ("objectvar" .
   [5 0 0 0 0 0 0 2 0])
  ("slot->read-value" .
   [1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0])
  ("defgeneric" .
   [29 0 0 0 0 0 0 0 0 0])
  (":documentation" .
   [46 0 1 0 1 5 13 2 3 0 0 0 0 0])
  ("destructuring-bind" .
   [0 0 0 0 0 0 0 2 0 0 0 0 0 0 1 0 0 0])
  ("write-value" .
   [2 0 0 0 0 0 0 0 0 0 0])
  ("@args" .
   [0 0 0 0 1])
  ("slot->write-value" .
   [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0])
  ("time.h" .
   [3 0 0 0 0 0])
  ("timespec" .
   [2 0 0 0 0 0 0 0])
  ("tv_" .
   [0 0 1])
  ("slptime" .
   [0 0 0 1 0 1 0])
  ("tv_nsec" .
   [0 0 0 0 2 0 0])
  ("nanosleep" .
   [0 0 0 0 0 1 0 0 0])
  ("remtime" .
   [0 0 0 0 0 1 0])
  ("signal.h" .
   [1 0 0 0 0 0 1 0])
  ("sigaction" .
   [2 0 0 0 0 0 0 0 0])
  ("alrm" .
   [1 0 0 0])
  ("alrm_handler" .
   [0 0 0 0 0 0 0 0 1 0 0 0])
  ("sigemptyset" .
   [1 0 0 0 0 0 0 0 1 0 0])
  ("act" .
   [2 0 0])
  ("perror" .
   [12 0 0 0 0 0])
  ("tv_sec" .
   [1 0 0 0 0 0])
  ("|-------------+----------------|" .
   [0 0 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("login" .
   [1 0 0 0 0])
  ("dprint" .
   [4 0 0 1 0 0])
  ("pr-rest" .
   [1 0 0 0 0 1 0])
  ("ts-print" .
   [1 0 0 0 0 1 0 0])
  ("TS-PRINT" .
   [0 0 0 0 1 0 0 0])
  ("make-node" .
   [4 0 0 0 0 0 0 0 0])
  (":name" .
   [14 0 0 0 0])
  ("node" .
   [10 0 0 0])
  ("*db*" .
   [1 0 0 0])
  ("yes" .
   [2 0 0])
  ("question" .
   [0 0 0 0 2 1 0 0])
  ("node-yes" .
   [2 0 0 0 0 0 0 0])
  ("no" .
   [2 0])
  ("node-no" .
   [2 0 0 0 0 0 0])
  ("give-up" .
   [2 0 0 0 0 0 0])
  ("QUESTION" .
   [0 0 0 0 1 0 0 0])
  ("pthread.h" .
   [1 0 0 0 0 0 0 0 0])
  ("PTHREAD_MUTEX_ROBUST" .
   [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0])
  ("PTHREAD_MUTEX_INITIALIZER" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0])
  ("PTHREAD_COND_INITIALIZER" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0])
  ("err" .
   [7 0 0])
  ("sigwait" .
   [1 0 0 0 0 0 0])
  ("mask" .
   [5 0 0 0])
  ("signo" .
   [5 0 0 0 2])
  ("switch" .
   [0 0 0 0 1 0])
  ("pthread_mutex_lock" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("lock" .
   [13 0 0 0])
  ("quitflag" .
   [0 0 0 0 2 1 0 0])
  ("pthread_mutex_unlock" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0])
  ("pthread_cond_signal" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("waitloc" .
   [2 0 0 0 0 0 0])
  ("default" .
   [1 0 0 0 1 0 0])
  ("stdlib.h" .
   [3 0 0 0 0 1 2 0])
  ("sigset_t" .
   [1 0 0 0 0 0 0 0])
  ("pthread_t" .
   [1 0 0 0 0 0 0 0 0])
  ("sigaddset" .
   [2 0 0 0 0 0 0 0 0])
  ("SIGINT" .
   [0 0 0 1 0 0])
  ("SIGQUIT" .
   [0 0 0 0 0 0 1])
  ("oldmask" .
   [1 0 0 0 1 0 0])
  ("pthread_create" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("tid" .
   [1 0 0])
  ("NULL" .
   [26 0 0 0])
  ("thr_fn" .
   [0 0 0 1 0 0])
  ("pthread_cond_wait" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("sigprocmask" .
   [0 0 0 0 0 0 0 0 1 0 0])
  ("uv.h" .
   [1 0 0 0])
  ("uv_loop_t" .
   [1 0 0 0 0 0 0 0 0])
  ("uv_loop_new" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("uv_run" .
   [1 0 0 0 0 0])
  ("UV_RUN_DEFAULT" .
   [0 0 0 0 0 0 0 0 0 0 1 0 0 0])
  ("sig_usr" .
   [1 0 0 0 0 0 0])
  ("SIGUSR" .
   [1 0 0 0 0 0])
  ("SIGUSR1" .
   [2 0 0 0 0 0 0])
  ("signal" .
   [4 0 0 0 0 0])
  ("caught" .
   [1 0 0 0 0 0])
  ("its" .
   [1 0 0])
  ("function" .
   [7 0 0 0 0 0 0 0])
  ("restore" .
   [1 0 0 0 0 0 0])
  ("restored" .
   [1 0 0 0 0 0 0 0])
  (":sb-posix" .
   [1 0 0 0 0 0 1 0 0])
  ("defdfun" .
   [1 0 0 0 0 0 0])
  ("doc" .
   [2 0 0])
  ("body" .
   [19 0 0 0])
  ("eval-when" .
   [2 0 0 0 0 0 0 0 0])
  (":compile-toplevel" .
   [0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0])
  (":load-toplevel" .
   [0 0 0 0 0 0 0 0 1 1 0 0 0 0])
  (":execute" .
   [1 0 0 0 0 0 1 0])
  ("unless" .
   [8 0 0 0 0 0])
  ("fboundp" .
   [1 0 0 0 0 0 0])
  ("@body" .
   [5 0 0 0 0])
  ("documentation" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0])
  ("groups" .
   [3 0 0 0 0 0])
  ("free" .
   [1 0 0 0])
  ("bitset" .
   [1 0 0 0 0 0])
  ("bitset_p" .
   [6 0 0 0 0 0 0 0])
  ("pbitset" .
   [10 0 0 0 1 0 0])
  ("bit" .
   [4 0 0])
  ("int64_t" .
   [7 0 0 0 0 5 0])
  ("group_count" .
   [0 0 0 0 0 0 0 1 0 0 0])
  ("shift" .
   [3 0 0 0 0])
  ("hunchentoot" .
   [0 0 0 0 0 0 0 2 0 0 3])
  (":hunchentoot" .
   [0 0 0 0 0 1 3 1 2 1 0 0])
  (":DRAKMA" .
   [0 0 0 1 0 0 0])
  ("ngroups" .
   [1 0 0 0 0 0 0])
  ("end" .
   [12 0 0])
  ("bitset_set_p" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("bitset_fill" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("math.h" .
   [1 0 0 0 0 0])
  ("right_end" .
   [1 0 0 0 0 0 0 0 0])
  ("return-code*" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("cffi-user" .
   [1 0 0 0 0 0 0 0 0])
  ("libcurl.so" .
   [0 0 0 0 0 0 0 1 0 0])
  ("start-session" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0])
  (":test-hunchentoot" .
   [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0])
  ("session-value" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0])
  ("mysql.h" .
   [1 0 0 0 0 0 0])
  ("MYSQL" .
   [3 0 0 0 0])
  ("fprintf" .
   [17 0 0 0 0 0 0])
  ("stderr" .
   [18 0 0 0 0 0])
  ("mysql_error" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("mysql_close" .
   [4 0 0 0 0 0 0 0 0 0 0])
  ("con" .
   [19 0 0])
  ("mysql_init" .
   [1 0 0 0 0 0 0 0 0 0])
  ("finish_with_error" .
   [0 0 0 0 3 0 3 1 0 0 0 1 0 0 0 0 0])
  ("common.h" .
   [0 0 0 0 1 0 0 0])
  ("fp" .
   [4 0])
  ("lengths" .
   [2 0 0 0 0 0 0])
  ("mysql_free_result" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0])
  ("cancel" .
   [1 0 0 0 0 0])
  ("point" .
   [3 0 0 0 0])
  ("PTHREAD_CANCEL_" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1])
  ("errno.h" .
   [3 0 0 0 0 0 0])
  ("ntowrite" .
   [2 0 0 0 1 0 1 0])
  ("set_fl" .
   [1 0 0 0 0 0])
  ("fcntl" .
   [5 0 0 0 0])
  ("old_flag" .
   [0 0 0 1 0 4 2 0])
  ("flag" .
   [2 0 0 1])
  ("ptr" .
   [13 0 0])
  ("nwrite" .
   [4 0 0 0 1 0])
  ("O_NONBLOCK" .
   [1 0 0 0 0 0 0 0 0 0])
  ("clr_fl" .
   [0 0 0 0 0 1])
  ("F_GETFL" .
   [1 0 0 0 0 0 0])
  ("F_SETFL" .
   [1 0 0 0 0 0 0])
  ("asynchronous" .
   [0 0 0 0 0 0 1 0 0 0 0 0])
  ("I/O" .
   [1 0 0])
  ("inet.h" .
   [3 0 0 1 0 0])
  ("servaddr" .
   [8 0 0 0 1 0 1 1])
  ("SERV_PORT" .
   [1 0 0 0 0 0 0 0 0])
  ("inet_pton" .
   [2 0 0 0 0 0 0 0 0])
  ("argv" .
   [1 0 0 0])
  ("stdin" .
   [2 0 0 0 0])
  ("str_cli" .
   [1 0 0 0 0 0 0])
  ("i" .
   [1])
  ("MovePoint" .
   [0 0 0 0 1 0 0 0 0])
  ("Point" .
   [1 0 0 0 0])
  ("use" .
   [2 0 0])
  ("show" .
   [3 0 0 0])
  ("dbs" .
   [2 0 0])
  ("PHP_HOME" .
   [0 0 0 0 1 0 0 0])
  ("GLOBALS" .
   [0 0 0 0 2 0 0])
  ("addition" .
   [1 0 0 0 0 0 0 0])
  ("_SERVER" .
   [0 0 1 0 3 0 0])
  ("setjmp.h" .
   [0 0 0 0 1 0 0 0])
  ("setjmp" .
   [1 0 0 0 0 0])
  ("jmp_buf" .
   [1 0 0 0 0 0 0])
  ("jmpbuffer" .
   [1 0 0 0 0 0 0 0 0])
  ("_FILES" .
   [3 0 0 0 2 0])
  ("username" .
   [2 0 0 0 0 0 0 0])
  ("servername" .
   [0 0 0 0 0 0 0 0 0 1])
  ("conn" .
   [4 0 0 0])
  ("PDO" .
   [2 0 0])
  ("sql" .
   [2 0 0])
  ("red:ping" .
   [4 0 0 0 0 0 0 0])
  ("msg" .
   [1 0 0])
  ("*arr*" .
   [1 0 0 2 3])
  ("read-file-into-string" .
   [1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0])
  ("read-stream-content-into-string" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("test2.txt" .
   [0 0 0 0 0 0 0 1 0])
  ("READ-STREAM-CONTENT-INTO-STRING" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("parse-body" .
   [1 0 0 0 0 0 0 0 0 0])
  ("good" .
   [1 0 0 0])
  ("meiyou" .
   [4 0 0 0 0 0])
  (":cl-containers" .
   [0 0 0 0 0 1 0 0 0 0 0 0 0 0])
  ("HASH-TABLE" .
   [0 0 0 0 1 0 0 0 0 0])
  ("hash-table-plist" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("hash-table-alist" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("keyi" .
   [1 0 0 0])
  ("CL-USER>" .
   [1 0 0 0 0 0 0 0])
  (":cl-fad" .
   [1 0 0 0 0 0 0])
  (":test-fad" .
   [0 0 0 0 0 0 0 1 0])
  ("/home/wlisper/" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("list-directory" .
   [1 0 0 0 0 0 0 1 0 0 0 0 0 0])
  ("/home/wlisper" .
   [0 0 0 0 0 0 1 0 0 0 1 1 3])
  ("pathname-as-directory" .
   [1 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0])
  ("/home/wlisper/test.txt" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0])
  ("pathname-as-file" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("dir" .
   [1 0 0])
  ("with-output-to-file" .
   [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0])
  (":jonathan" .
   [1 0 0 0 0 0 0 0 0])
  ("common-lisp" .
   [0 0 0 0 0 0 1 0 0 0 0])
  (":ironclad" .
   [1 0 0 0 0 0 0 0 0])
  ("ironclad" .
   [0 0 0 0 1 0 0 1])
  ("ironclad:byte-array-to-hex-string" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("code" .
   [4 0 0 0])
  (":cl-redis" .
   [1 0 0 0 0 0 0 0 0])
  (":test-redis" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("red:connect" .
   [2 0 0 0 0 0 0 0 0 0 0])
  ("params" .
   [2 0 0 0 0 0])
  ("optimize" .
   [0 0 0 0 1 0 1 0])
  ("speed" .
   [3 0 0 0 0])
  ("fact-a" .
   [9 0 0 0 0 0])
  ("fact-iter" .
   [2 0 0 0 0 0 0 0 0])
  ("fact-b" .
   [3 0 0 0 0 0])
  ("fixnum" .
   [1 0 0 0 0 0])
  ("*pointer*" .
   [0 0 0 0 0 1 0 0 0])
  (":cl-curl" .
   [1 0 0 0 0 0 0 0])
  ("curl-easy-init" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 1])
  ("curl-option" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("indent-tabs-mode:" .
   [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0])
  ("-*-" .
   [0 0 1])
  ("deftype" .
   [3 0 0 0 0 0 0])
  ("thread" .
   [3 0 0 0 0 0])
  ("sb-thread:thread" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0])
  ("sb-thread:make-thread" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("sb-thread:*current-thread*" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0])
  ("threadp" .
   [1 0 0 0 0 0 0])
  ("thread-name" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("sb-thread:thread-name" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("sb-thread:mutex" .
   [2 0 0 0 0 0 0 0 0 0 0 0 1 0 0])
  ("recursive-lock" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("make-lock" .
   [5 0 0 0 0 0 0 0 0])
  ("sb-thread:make-mutex" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0])
  ("wait-p" .
   [3 0 0 0 0 0])
  ("cl:if" .
   [1 0 0 0 0])
  ("cl:find-symbol" .
   [0 0 0 0 0 0 0 1 0 0 0 0 0 0])
  ("cl:string" .
   [1 0 0 0 0 0 0 0 0])
  (":grab-mutex" .
   [1 0 0 0 0 0 0 0 0 0 0])
  (":sb-thread" .
   [0 0 0 0 1 0 0 0 0 0])
  ("sb-thread:grab-mutex" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":waitp" .
   [1 0 0 0 0 0])
  ("sb-thread:get-mutex" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0])
  ("release-lock" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("sb-thread:release-mutex" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0])
  ("place" .
   [10 0 0 0 0])
  ("sb-thread:with-mutex" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0])
  ("make-recursive-lock" .
   [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0])
  ("with-recursive-lock-held" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("make-condition-variable" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("sb-thread:make-waitqueue" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("condition-variable" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0])
  ("sb-thread:condition-wait" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0])
  (":timeout" .
   [2 0 0 0 0 0 0 0])
  ("sb-thread:release-foreground" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0])
  ("reason-phrase" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0])
  ("return-code" .
   [4 0 0 0 0 0 0 1 0 0 0])
  ("*http-reason-phrase-map*" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("assoc*" .
   [2 0 0 0 0 0])
  ("thing" .
   [7 0 0 0 0])
  ("alist" .
   [7 0 0 0 0])
  ("assoc" .
   [6 0 0 0 0])
  ("eq" .
   [4 0])
  ("string-equal" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("md5-hex" .
   [1 0 0 0 0 0 0])
  ("with-output-to-string" .
   [4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("md5:md5sum-string" .
   [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0])
  ("escape-for-html" .
   [3 0 0 0 0 0 1 0 0 0 0 0 0 0 0])
  ("write-string" .
   [7 0 0 0 0 0 0 0 0 0 0 0])
  ("otherwise" .
   [2 0 0 0 0 0 0 3 0])
  ("write-char" .
   [3 0 0 0 0 0 0 0 0 0])
  ("http-token-p" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("token" .
   [4 0 0 0 0])
  ("plusp" .
   [1 0 0 0 0])
  ("every" .
   [2 0 0 0 0])
  ("char-code" .
   [3 0 0 0 0 0 0 0 0])
  ("char=" .
   [5 0 0 0 0])
  ("rfc-1123-date" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0])
  ("get-universal-time" .
   [1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0])
  ("second" .
   [8 0 0 0 0 0])
  ("minute" .
   [4 0 0 0 0 0])
  ("hour" .
   [4 0 0 0])
  ("date" .
   [4 0 0 0])
  ("month" .
   [3 0 0 0 0])
  ("year" .
   [9 0 0 0])
  ("day-of-week" .
   [2 0 0 0 0 0 0 0 0 0 0])
  ("decode-universal-time" .
   [1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0])
  ("svref" .
   [2 0 0 0 0])
  ("+day-names+" .
   [0 0 0 0 0 0 1 0 0 0 0])
  ("+month-names+" .
   [0 0 0 0 0 0 1 0 0 0 0 0 0])
  ("iso-time" .
   [3 0 0 0 0 0 0 0])
  ("counter" .
   [3 0 0 0 0 0 0])
  ("make-tmp-file-name" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("prefix" .
   [3 0 0 0 0 0])
  ("tmp-file-name" .
   [1 0 0 1 0 0 0 0 2 0 0 0 0])
  ("+:allegro" .
   [0 0 0 1 0 0 0 0 0])
  ("system:make-temp-file-name" .
   [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("*tmp-files*" .
   [0 0 0 0 2 0 0 0 0 0 0])
  ("*tmp-directory*" .
   [0 0 0 0 0 0 0 0 0 1 1 0 0 0 0])
  ("-:allegro" .
   [0 0 0 0 0 0 0 1 0])
  (":type" .
   [8 0 0 0 0])
  (":defaults" .
   [2 0 0 0 0 0 0 0 0])
  ("push" .
   [1 0 0 0])
  ("*file-upload-hook*" .
   [0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0])
  ("quote-string" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("char<" .
   [1 0 0 0 0])
  ("Space" .
   [2 0 0 0 0])
  ("new-type" .
   [2 0 0 0 0 0 0 0])
  ("converter" .
   [3 0 0 0 0 0 0 0 0])
  ("setq" .
   [5 0 0 0])
  ("new-vector" .
   [2 0 0 0 0 0 0 0 0 0])
  (":fill-pointer" .
   [0 0 0 0 0 0 1 1 0 0 0 0 0])
  ("finally" .
   [1 0 0 0 0 0 0])
  ("condition-variable-wait" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("acceptor-shutdown-queue" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("shutdown" .
   [2 0 0 0 0 0 0 0])
  ("usocket:socket-close" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("mp:process-kill" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("usocket:get-local-name" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("usocket:socket-connect" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("acceptor-log-message" .
   [4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":error" .
   [2 0 0 0 0 0])
  ("chunked" .
   [2 0 0 0 0 0 0])
  ("chunked-stream" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("chunked-stream-input-chunking-p" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0])
  ("chunked-stream-stream" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":around" .
   [2 0 0 0 0 0 0])
  ("with-conditions-caught-and-logged" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("with-mapped-conditions" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0])
  ("call-next-method" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("do-with-acceptor-request-count-incremented" .
   [1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("*acceptor*" .
   [4 0 0 0 4 0 5 0 0 1])
  ("ACCEPTOR-REQUESTS-IN-PROGRESS" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0])
  ("unwind-protect" .
   [1 0 0 0 0 0 0 0 0 0 1 0 0 0])
  ("condition-variable-signal" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("with-acceptor-request-count-incremented" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("acceptor-make-request" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("headers-in" .
   [4 0 0 0 0 0 0 0 0 0])
  ("content-stream" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("method" .
   [3 0 0 0 0 0])
  ("uri" .
   [2 0 0])
  ("server-protocol" .
   [1 0 0 0 0 0 0 0 0 0 1 0 0 0 1])
  ("remote-addr" .
   [2 0 0 0 0 0 0 0 0 0 0])
  ("remote-port" .
   [2 0 0 0 0 0 0 0 0 0 0])
  ("get-peer-address-and-port" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("local-addr" .
   [2 0 0 0 0 0 0 0 0 0])
  ("local-port" .
   [2 0 0 0 0 0 0 0 0 0])
  ("get-local-address-and-port" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":local-addr" .
   [1 0 0 0 0 0 0 0 0 0 0])
  (":local-port" .
   [1 0 0 0 0 0 0 0 0 0 0])
  (":remote-addr" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  (":remote-port" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  (":headers-in" .
   [2 0 0 0 0 0 0 0 0 0 0])
  (":content-stream" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":uri" .
   [2 0 0 0])
  (":server-protocol" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0])
  ("detach-socket" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0])
  ("*finish-processing-socket*" .
   [2 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("*close-hunchentoot-stream*" .
   [0 0 0 0 0 0 0 0 0 1 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0])
  ("socket-stream" .
   [3 0 0 0 0 0 0 0 0 0 1 0 0])
  ("make-socket-stream" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("*hunchentoot-stream*" .
   [1 0 0 0 2 0 1 0 1 1 0 0 0 0 0 0 0 0 0 2])
  ("initializa-connection-stream" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("*reply*" .
   [1 0 0 0 0 0 1])
  ("*session*" .
   [1 0 0 0 0 0 0 0 0])
  ("transfer-encodings" .
   [4 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0])
  (":transfer-encoding" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("member" .
   [1 0 0 0 0 0])
  ("equalp" .
   [1 0 0 0 0 0])
  ("process-request" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("url-string" .
   [1 0 0 0 0 0 0 0 0 0])
  ("finish-output" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0])
  ("flet" .
   [1 0 0 0])
  ("close-stream" .
   [3 0 0 0 0 0 0 0 0 0 0 0])
  ("ignore-errors*" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("ignore-errors" .
   [1 0 0 0 0 0 0 0 0 0 0 0 2])
  (":abort" .
   [1 0 0 0 0 0])
  ("acceptor-log-access" .
   [3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("with-log-stream" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("*access-log-lock*" .
   [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0])
  ("remote-addr*" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("header-in*" .
   [1 0 0 0 0 0 0 0 0 0])
  (":x-forwarded-for" .
   [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0])
  ("authorization" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0])
  ("request-method*" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("script-name*" .
   [2 0 0 0 0 0 0 0 0 0 0 0])
  ("query-string*" .
   [0 0 0 0 0 0 0 0 0 0 0 0 1])
  ("content-length*" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("referer" .
   [1 0 0 0 0 0 0])
  ("user-agent" .
   [1 0 0 0 0 0 0 0 0 0])
  ("log-level" .
   [4 0 0 0 0 0 0 0 1])
  ("format-arguments" .
   [5 0 0 0 0 0 0 0 0 0 2 2 2 0 0 0])
  ("format-string" .
   [4 0 0 0 0 0 0 0 0 0 0 0 0])
  ("*message-log-lock*" .
   [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0])
  ("*trace-output*" .
   [0 0 0 0 0 0 0 1 0 0 0 0 0 0])
  ("log-message*" .
   [2 0 0 0 0 0 0 0 0 0 0 0])
  ("hunchentoot-error" .
   [5 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("usocket:socket-listen" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("usocket:*wildcard-host*" .
   [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0])
  (":reuseaddress" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0])
  (":backlog" .
   [1 0 0 0 0 0 0 0])
  ("unsigned-byte" .
   [0 0 0 0 0 0 0 0 0 0 0 1 0])
  ("slot-value" .
   [1 0 0 0 0 0 0 0 0 0])
  ("usocket:get-local-port" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("usocket:with-server-socket" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("listener" .
   [3 0 0 0 0 0 0 0])
  ("usocket:wait-for-input" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":ready-only" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("when-let" .
   [1 0 0 0 0 0 0 0])
  ("client-connection" .
   [3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("usocket:socket-accept" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("usocket:connection-aborted-error" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("set-timeouts" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("path" .
   [2 0 0 0])
  ("request-pathname" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("handle-static-file" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("script-name" .
   [2 0 0 0 0 0 0 0 0 0 0])
  ("+http-not-found+" .
   [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0])
  ("handle-request" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("*request*" .
   [0 0 0 0 0 2 1 0 0])
  ("*headers-sent*" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 1])
  ("handler-done" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("get-backtrace" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0])
  ("with-debugger" .
   [0 0 0 0 0 0 0 0 0 0 1 0 0])
  ("acceptor-status-message" .
   [4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("http-status-code" .
   [10 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0])
  ("&allow-other-keys" .
   [1 0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 0])
  ("make-cooked-message" .
   [2 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0])
  ("backtrace" .
   [2 0 0 0 0 0 0 0 0])
  ("cooked-message" .
   [9 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("arguments" .
   [1 0 0 0 0 1 0 0 0])
  ("content-type*" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0])
  ("<html><head><title>~D" .
   [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0])
  ("~A</title></head><body><h1>~:*~A</h1>~?<p><hr>~A</p></body></html>" .
   [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("arg" .
   [4 0 0])
  ("address-string" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (".+http-moved-temporarily+" .
   [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (".+http-moved-permanently+" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("header-out" .
   [1 0 0 0 0 0 0 0 0 0])
  (":location" .
   [1 0 0 0 0 0 0 0 0])
  (".+http-authorization-required+" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (".+http-forbidden+" .
   [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0])
  (".+http-not-found+" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (".+http-bad-request+" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0])
  (".+http-internal-server-error+" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("*show-lisp-errors-p*" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0])
  ("princ-to-string" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("*show-lisp-backtraces-p*" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0])
  ("<=" .
   [1 0])
  ("string-as-keyword" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("*package*" .
   [1 0 0 0 0 0 0 0 0])
  ("read-from-string" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("substitute-request-context-variables" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":script-name" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  (":lisp-implementation-type" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("lisp-implementation-type" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0])
  (":lisp-implementation-version" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("lisp-implementation-version" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":hunchentoot-version" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("getf" .
   [1 0 0 0])
  (":backtrace" .
   [1 0 0 0 0 0 0 0 0 0])
  ("cl-ppcre:regex-replace-all" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("target-string" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0])
  ("match-start" .
   [2 0 0 0 0 0 0 0 0 0 0])
  ("match-end" .
   [2 0 0 0 0 0 0 0 0])
  ("reg-starts" .
   [2 0 0 0 0 0 0 0 0 0])
  ("reg-ends" .
   [2 0 0 0 0 0 0 0])
  ("ignore" .
   [4 0 0 0 0 0])
  ("variable-name" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0])
  ("subseq" .
   [1 0 0 0 0 0])
  ("*dispatch-table*" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1])
  ("dispatch-easy-handlers" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1])
  ("*easy-handler-alist*" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("compute-real-name" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("string-downcase" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("listp" .
   [2 0 0 0 0])
  ("convert-parameter" .
   [3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":destructivep" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0])
  ("compute-simple-parameter" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("parameter" .
   [2 0 0 0 0 0 0 0 0])
  ("parameter-name" .
   [4 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("parameter-reader" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("compute-list-parameter" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("parameters" .
   [1 0 0 0 0 0 0 0 0 0])
  ("string=" .
   [1 0 0 0 0 0 0])
  ("taskmaster-acceptor" .
   [6 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("handle-incoming-connection" .
   [1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("create-request-handler-thread" .
   [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("too-many-taskmaster-requests" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("taskmaster-max-thread-count" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1])
  ("taskmaster-max-accept-count" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0])
  ("taskmaster-thread-count" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1])
  ("increment-taskmaster-thread-count" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("decrement-taskmaster-thread-count" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("start-thread" .
   [2 0 0 0 0 0 0 0 0 0 0 0])
  ("thunk" .
   [4 0 0 0 0])
  ("bt:make-thread" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("mp:process-run-function" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("*default-max-thread-count*" .
   [0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("multi-threaded-taskmaster" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0])
  ("multi-threaded" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 1])
  ("max-thread-count" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":max-thread-count" .
   [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0])
  ("thread-count" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("thread-count-lock" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("MAX-ACCEPT-COUNT" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1])
  ("max-accept-count" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("accept-count" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("taskmaster-accept-count" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("accept-count-lock" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("taskmaster-accept-count-lock" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("wait-queue" .
   [1 0 0 0 0 0 0 0 0 0])
  ("taskmaster-wait-queue" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("wait-lock" .
   [1 0 0 0 0 0 0 0 0])
  ("taskmaster-wait-lock" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("worker-thread-name-format" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":worker-thread-name-format" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0])
  ("'lisp-hook" .
   [2 0 0 0 0 0 0 0 0 0])
  ("binds" .
   [20 0 0 0 0])
  ("recbind" .
   [0 0 0 1 0 0 0])
  ("binding" .
   [5 0 0 0 0 0 3])
  ("match" .
   [11 0 0 0 0])
  ("alexandria" .
   [0 0 0 1 0 0 0 0 0 2])
  ("alexandria:xor" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 1])
  ("alexandria:iota" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":step" .
   [1 0 0 0 0])
  ("alexandria:array-length" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("alexandria:array-index" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("alexandria:assoc-value" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0])
  ("ass" .
   [2 0 0])
  ("val" .
   [15 0 0])
  ("package-nicknames" .
   [0 0 0 0 0 0 0 0 0 0 1 0 2 0 0 0 0])
  ("cl-async" .
   [0 0 0 0 0 0 1 0])
  (":cl-async" .
   [0 0 0 0 0 0 0 1 0])
  ("as:octet-vector" .
   [1 0 0 0 0 0 0 0 0 0 1 0 0 0 0])
  (":optima" .
   [0 0 0 0 0 0 2])
  ("guard" .
   [1 0 0 0 0])
  ("putenv" .
   [0 0 0 1 1 1])
  ("define-modify-macro" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("inc3f" .
   [1 0 0 0 1])
  ("get-setf-expansion" .
   [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0])
  ("obj-sym" .
   [1 0 0 0 0 0 1])
  ("pull" .
   [1 0 0 0])
  (":usocket" .
   [2 0 0 0 0 0 0 0])
  ("socket-connect" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":protocol" .
   [1 0 0 0 0 0 0 0 0])
  (":stream" .
   [1 0 0 0 0 0 0])
  (":datagram" .
   [1 0 0 0 0 0 0 0 0])
  ("CMAKE" .
   [0 0 0 1 0])
  ("ext-blog]................................" .
   [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("ext-blog:main" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0])
  ("drivar_name" .
   [0 0 0 0 2 0 0 0 0 0 0])
  (":input" .
   [1 0 0 0 0 0])
  ("read-line" .
   [1 0 0 0 0 0 0 0 0])
  ("*h*" .
   [2 0 23])
  ("batman" .
   [6 0 0 0 1 0])
  ("superman" .
   [7 0 0 0 0 0 0 0])
  ("remhash" .
   [1 0 0 0 0 1 0])
  ("maphash" .
   [1 0 0 0 0 0 0])
  ("oldest" .
   [1 0 0 0 1 0])
  ("hero" .
   [3 0 0 0])
  ("with-hash-table-iterator" .
   [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("find?" .
   [1 0 0 0 0])
  ("hash-keys" .
   [1 0 0 0 0 0 0 0 0])
  ("~A" .
   [1 0])
  ("l" .
   [1])))
