;; Object buildyourownlisp/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "buildyourownlisp/"
  :tables
  (list
    (semanticdb-table "repl.c"
      :major-mode 'c-mode
      :tags 
        '( ("stdio.h" include (:system-flag t) nil [20 38])
            ("stdint.h" include (:system-flag t) nil [39 58])
            ("stdlib.h" include (:system-flag t) nil [59 78])
            ("./mpc.h" include nil nil [79 97])
            ("editline/readline.h" include (:system-flag t) nil [417 447])
            ("editline/history.h" include (:system-flag t) nil [448 477])
            ("eval_op" function
               (:prototype-flag t
                :arguments 
                  ( ("x" variable (:type ("int64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [502 512])
                    ("op" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [513 522])
                    ("y" variable (:type ("int64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [523 533]))                  
                :type ("int64_t" type (:type "class") nil nil))
                nil [486 534])
            ("eval" function
               (:arguments 
                  ( ("t" variable
                       (:pointer 1
                        :type ("mpc_ast_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [708 721]))                  
                :type ("int64_t" type (:type "class") nil nil))
                nil [695 1078])
            ("span_op" variable (:constant-flag t) nil [1088 1095])
            ("expt" function
               (:arguments 
                  ( ("base" variable (:type ("int64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1197 1210])
                    ("power" variable (:type ("int64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1211 1225]))                  
                :type ("int64_t" type (:type "class") nil nil))
                nil [1184 1391])
            ("max" function
               (:arguments 
                  ( ("l" variable (:type ("int64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1405 1415])
                    ("r" variable (:type ("int64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1416 1426]))                  
                :type ("int64_t" type (:type "class") nil nil))
                nil [1393 1454])
            ("min" function
               (:arguments 
                  ( ("l" variable (:type ("int64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1468 1478])
                    ("r" variable (:type ("int64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1479 1489]))                  
                :type ("int64_t" type (:type "class") nil nil))
                nil [1456 1517])
            ("eval_op" function
               (:arguments 
                  ( ("x" variable (:type ("int64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1535 1545])
                    ("op" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [1546 1555])
                    ("y" variable (:type ("int64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1556 1566]))                  
                :type ("int64_t" type (:type "class") nil nil))
                nil [1519 1877])
            ("main" function (:type "int") nil [1879 3133]))          
      :file "repl.c"
      :pointmax 3136
      :fsize 3135
      :lastmodtime '(22619 22706 153600 8000)
      :unmatched-syntax nil
      :lexical-table 
        '(("span_op" (spp-arg-list ("x" "op" "y" "opt") 1095 . 1110) . 
              ((IF "if" 1115 . 1117) (semantic-list "(strcmp(op, #opt) == 0)" 1118 . 1141) (semantic-list "{ \\
    return x opt y;            \\
  }" 1142 . 1182)))
          )
)
    (semanticdb-table "Makefile"
      :major-mode 'makefile-gmake-mode
      :tags 
        '( ("lisp" function (:arguments ("repl.c")) nil [1 65]))          
      :file "Makefile"
      :pointmax 65
      :fsize 64
      :lastmodtime '(22619 22515 329686 252000)
      :unmatched-syntax nil)
    (semanticdb-table "mpc.h"
      :major-mode 'c-mode
      :tags 
        '( ("mpc_h" variable (:constant-flag t) nil [188 193])
            ("stdlib.h" include (:system-flag t) nil [235 254])
            ("stdio.h" include (:system-flag t) nil [255 273])
            ("stdarg.h" include (:system-flag t) nil [274 293])
            ("string.h" include (:system-flag t) nil [294 313])
            ("math.h" include (:system-flag t) nil [314 331])
            ("errno.h" include (:system-flag t) nil [332 350])
            ("ctype.h" include (:system-flag t) nil [351 369])
            ((((0) "mpc_state_t")) type (:superclasses ("" type (:members (((("pos" 0 nil nil nil)) variable (:type "long") (reparse-symbol classsubparts) [411 420]) ((("row" 0 nil nil nil)) variable (:type "long") (reparse-symbol classsubparts) [423 432]) ((("col" 0 nil nil nil)) variable (:type "long") (reparse-symbol classsubparts) [435 444])) :type "struct") nil nil) :type "typedef") nil [392 459])
            ((((0) "mpc_err_t")) type (:superclasses ("" type (:members (((("state" 0 nil nil nil)) variable (:type ("mpc_state_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [501 519]) ((("expected_num" 0 nil nil nil)) variable (:type "int") (reparse-symbol classsubparts) [522 539]) ((("filename" 1 nil nil nil)) variable (:type "char") (reparse-symbol classsubparts) [542 557]) ((("failure" 1 nil nil nil)) variable (:type "char") (reparse-symbol classsubparts) [560 574]) ((("expected" 2 nil nil nil)) variable (:type "char") (reparse-symbol classsubparts) [577 593]) ((("recieved" 0 nil nil nil)) variable (:type "char") (reparse-symbol classsubparts) [596 610])) :type "struct") nil nil) :type "typedef") nil [482 623])
            ((((0) "mpc_val_t")) type (:superclasses ("void") :type "typedef") nil [795 818])
            ((((0) "mpc_result_t")) type (:superclasses ("" type (:members (((("error" 1 nil nil nil)) variable (:type ("mpc_err_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [838 855]) ((("output" 1 nil nil nil)) variable (:type ("mpc_val_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [858 876])) :type "union") nil nil) :type "typedef") nil [820 892])
            ("mpc_parser_t" type
               (:prototype t
                :type "struct")
                nil [894 914])
            ((((0) "mpc_parser_t")) type (:superclasses ("mpc_parser_t" type (:prototype t :type "struct") nil nil) :type "typedef") nil [915 956])
            ((((0) "mpc_ast_t")) type (:superclasses ("mpc_ast_t" type (:members (((("tag" 1 nil nil nil)) variable (:type "char") (reparse-symbol classsubparts) [6852 6862]) ((("contents" 1 nil nil nil)) variable (:type "char") (reparse-symbol classsubparts) [6865 6880]) ((("state" 0 nil nil nil)) variable (:type ("mpc_state_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [6883 6901]) ((("children_num" 0 nil nil nil)) variable (:type "int") (reparse-symbol classsubparts) [6904 6921]) ((("children" 2 nil nil nil)) variable (:type ("mpc_ast_t" type (:prototype t :type "struct") nil nil)) (reparse-symbol classsubparts) [6924 6952])) :type "struct") nil nil) :type "typedef") nil [6823 6965])
            ((((0) "mpc_ast_trav_order_t")) type (:superclasses ("" type (:members (("mpc_ast_trav_order_pre" variable (:constant-flag t :type "int") (reparse-symbol enumsubparts) [7809 7832]) ("mpc_ast_trav_order_post" variable (:constant-flag t :type "int") (reparse-symbol enumsubparts) [7835 7860])) :type "enum") nil nil) :type "typedef") nil [7792 7882])
            ((((0) "mpc_ast_trav_t")) type (:superclasses ("mpc_ast_trav_t" type (:members (((("curr_node" 1 nil nil nil)) variable (:type ("mpc_ast_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [7918 7951]) ((("parent" 1 nil nil nil)) variable (:type ("mpc_ast_trav_t" type (:prototype t :type "struct") nil nil)) (reparse-symbol classsubparts) [7954 7984]) ((("curr_child" 0 nil nil nil)) variable (:type "int") (reparse-symbol classsubparts) [7987 8021]) ((("order" 0 nil nil nil)) variable (:type ("mpc_ast_trav_order_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [8024 8053])) :type "struct") nil nil) :type "typedef") nil [7884 8071])
            ("" type
               (:members 
                  ( ("MPCA_LANG_DEFAULT" variable
                       (:constant-flag t
                        :default-value (9162 9163)
                        :type "int")
                        (reparse-symbol enumsubparts) [9129 9163])
                    ("MPCA_LANG_PREDICTIVE" variable
                       (:constant-flag t
                        :default-value (9200 9201)
                        :type "int")
                        (reparse-symbol enumsubparts) [9167 9201])
                    ("MPCA_LANG_WHITESPACE_SENSITIVE" variable
                       (:constant-flag t
                        :default-value (9238 9239)
                        :type "int")
                        (reparse-symbol enumsubparts) [9205 9239]))                  
                :type "enum")
                nil [9120 9242]))          
      :file "mpc.h"
      :pointmax 10031
      :fsize 10400
      :lastmodtime '(22618 41838 72965 476000)
      :unmatched-syntax '((punctuation 9992 . 9993) (semantic-list 9847 . 9992) (symbol 9834 . 9847) (INT 9830 . 9833) (punctuation 9827 . 9828) (semantic-list 9680 . 9827) (symbol 9667 . 9680) (INT 9663 . 9666) (punctuation 9660 . 9661) (semantic-list 9643 . 9660) (symbol 9634 . 9643) (VOID 9629 . 9633) (punctuation 9627 . 9628) (semantic-list 9610 . 9627) (symbol 9598 . 9610) (VOID 9593 . 9597) (punctuation 9591 . 9592) (semantic-list 9574 . 9591) (symbol 9565 . 9574) (VOID 9560 . 9564) (punctuation 9541 . 9542) (semantic-list 9503 . 9541) (symbol 9485 . 9503) (punctuation 9484 . 9485) (symbol 9474 . 9483) (punctuation 9472 . 9473) (semantic-list 9447 . 9472) (symbol 9433 . 9447) (punctuation 9432 . 9433) (symbol 9422 . 9431) (punctuation 9420 . 9421) (semantic-list 9395 . 9420) (symbol 9381 . 9395) (punctuation 9380 . 9381) (symbol 9370 . 9379) (punctuation 9368 . 9369) (semantic-list 9330 . 9368) (symbol 9321 . 9330) (punctuation 9320 . 9321) (symbol 9310 . 9319) (punctuation 9307 . 9308) (semantic-list 9270 . 9307) (symbol 9258 . 9270) (punctuation 9257 . 9258) (symbol 9244 . 9256) (punctuation 9117 . 9118) (semantic-list 9105 . 9117) (symbol 9097 . 9105) (punctuation 9096 . 9097) (symbol 9083 . 9095) (punctuation 9081 . 9082) (semantic-list 9069 . 9081) (symbol 9062 . 9069) (punctuation 9061 . 9062) (symbol 9048 . 9060) (punctuation 9045 . 9046) (semantic-list 9021 . 9045) (symbol 9011 . 9021) (punctuation 9010 . 9011) (symbol 8997 . 9009) (punctuation 8995 . 8996) (semantic-list 8978 . 8995) (symbol 8968 . 8978) (punctuation 8967 . 8968) (symbol 8954 . 8966) (punctuation 8952 . 8953) (semantic-list 8935 . 8952) (symbol 8926 . 8935) (punctuation 8925 . 8926) (symbol 8912 . 8924) (punctuation 8909 . 8910) (semantic-list 8892 . 8909) (symbol 8882 . 8892) (punctuation 8881 . 8882) (symbol 8868 . 8880) (punctuation 8866 . 8867) (semantic-list 8849 . 8866) (symbol 8841 . 8849) (punctuation 8840 . 8841) (symbol 8827 . 8839) (punctuation 8824 . 8825) (semantic-list 8807 . 8824) (symbol 8797 . 8807) (punctuation 8796 . 8797) (symbol 8783 . 8795) (punctuation 8781 . 8782) (semantic-list 8764 . 8781) (symbol 8754 . 8764) (punctuation 8753 . 8754) (symbol 8740 . 8752) (punctuation 8738 . 8739) (semantic-list 8721 . 8738) (symbol 8712 . 8721) (punctuation 8711 . 8712) (symbol 8698 . 8710) (punctuation 8696 . 8697) (semantic-list 8664 . 8696) (symbol 8652 . 8664) (punctuation 8651 . 8652) (symbol 8638 . 8650) (punctuation 8636 . 8637) (semantic-list 8604 . 8636) (symbol 8596 . 8604) (punctuation 8595 . 8596) (symbol 8582 . 8594) (punctuation 8579 . 8580) (semantic-list 8556 . 8579) (symbol 8542 . 8556) (punctuation 8541 . 8542) (symbol 8531 . 8540) (punctuation 8529 . 8530) (semantic-list 8515 . 8529) (symbol 8503 . 8515) (punctuation 8502 . 8503) (symbol 8492 . 8501) (punctuation 8490 . 8491) (semantic-list 8467 . 8490) (symbol 8454 . 8467) (punctuation 8453 . 8454) (symbol 8443 . 8452) (punctuation 8440 . 8441) (semantic-list 8412 . 8440) (symbol 8402 . 8412) (INT 8398 . 8401) (punctuation 8304 . 8305) (semantic-list 8281 . 8304) (symbol 8260 . 8281) (VOID 8255 . 8259) (punctuation 8252 . 8253) (semantic-list 8229 . 8252) (symbol 8208 . 8229) (punctuation 8207 . 8208) (symbol 8197 . 8206) (punctuation 8194 . 8195) (semantic-list 8111 . 8194) (symbol 8089 . 8111) (punctuation 8088 . 8089) (symbol 8073 . 8087) (punctuation 7789 . 7790) (semantic-list 7748 . 7789) (symbol 7728 . 7748) (punctuation 7727 . 7728) (symbol 7717 . 7726) (punctuation 7715 . 7716) (semantic-list 7682 . 7715) (symbol 7665 . 7682) (punctuation 7664 . 7665) (symbol 7654 . 7663) (punctuation 7652 . 7653) (semantic-list 7611 . 7652) (symbol 7591 . 7611) (INT 7587 . 7590) (punctuation 7585 . 7586) (semantic-list 7552 . 7585) (symbol 7535 . 7552) (INT 7531 . 7534) (punctuation 7528 . 7529) (semantic-list 7504 . 7528) (symbol 7488 . 7504) (VOID 7483 . 7487) (punctuation 7481 . 7482) (semantic-list 7467 . 7481) (symbol 7454 . 7467) (VOID 7449 . 7453) (punctuation 7447 . 7448) (semantic-list 7433 . 7447) (symbol 7419 . 7433) (VOID 7414 . 7418) (punctuation 7411 . 7412) (semantic-list 7382 . 7411) (symbol 7369 . 7382) (punctuation 7368 . 7369) (symbol 7358 . 7367) (punctuation 7356 . 7357) (semantic-list 7327 . 7356) (symbol 7316 . 7327) (punctuation 7315 . 7316) (symbol 7305 . 7314) (punctuation 7303 . 7304) (semantic-list 7274 . 7303) (symbol 7254 . 7274) (punctuation 7253 . 7254) (symbol 7243 . 7252) (punctuation 7241 . 7242) (semantic-list 7212 . 7241) (symbol 7197 . 7212) (punctuation 7196 . 7197) (symbol 7186 . 7195) (punctuation 7184 . 7185) (semantic-list 7156 . 7184) (symbol 7139 . 7156) (punctuation 7138 . 7139) (symbol 7128 . 7137) (punctuation 7126 . 7127) (semantic-list 7112 . 7126) (symbol 7096 . 7112) (punctuation 7095 . 7096) (symbol 7085 . 7094) (punctuation 7083 . 7084) (semantic-list 7054 . 7083) (symbol 7041 . 7054) (punctuation 7040 . 7041) (symbol 7030 . 7039) (punctuation 7028 . 7029) (semantic-list 6989 . 7028) (symbol 6978 . 6989) (punctuation 6977 . 6978) (symbol 6967 . 6976) (punctuation 6804 . 6805) (semantic-list 6788 . 6804) (symbol 6782 . 6788) (punctuation 6781 . 6782) (symbol 6768 . 6780) (punctuation 6728 . 6729) (semantic-list 6705 . 6728) (symbol 6695 . 6705) (punctuation 6694 . 6695) (symbol 6684 . 6693) (punctuation 6682 . 6683) (semantic-list 6659 . 6682) (symbol 6647 . 6659) (punctuation 6646 . 6647) (symbol 6636 . 6645) (punctuation 6633 . 6634) (semantic-list 6610 . 6633) (symbol 6597 . 6610) (punctuation 6596 . 6597) (symbol 6586 . 6595) (punctuation 6584 . 6585) (semantic-list 6561 . 6584) (symbol 6548 . 6561) (punctuation 6547 . 6548) (symbol 6537 . 6546) (punctuation 6535 . 6536) (semantic-list 6512 . 6535) (symbol 6499 . 6512) (punctuation 6498 . 6499) (symbol 6488 . 6497) (punctuation 6485 . 6486) (semantic-list 6462 . 6485) (symbol 6454 . 6462) (punctuation 6453 . 6454) (symbol 6443 . 6452) (punctuation 6441 . 6442) (semantic-list 6418 . 6441) (symbol 6410 . 6418) (punctuation 6409 . 6410) (symbol 6399 . 6408) (punctuation 6397 . 6398) (semantic-list 6374 . 6397) (symbol 6366 . 6374) (punctuation 6365 . 6366) (symbol 6355 . 6364) (punctuation 6353 . 6354) (semantic-list 6330 . 6353) (symbol 6321 . 6330) (punctuation 6320 . 6321) (symbol 6310 . 6319) (punctuation 6307 . 6308) (semantic-list 6293 . 6307) (symbol 6271 . 6293) (punctuation 6270 . 6271) (symbol 6260 . 6269) (punctuation 6258 . 6259) (semantic-list 6244 . 6258) (symbol 6220 . 6244) (punctuation 6219 . 6220) (symbol 6209 . 6218) (punctuation 6207 . 6208) (semantic-list 6193 . 6207) (symbol 6174 . 6193) (punctuation 6173 . 6174) (symbol 6163 . 6172) (punctuation 6161 . 6162) (semantic-list 6147 . 6161) (symbol 6134 . 6147) (punctuation 6133 . 6134) (symbol 6123 . 6132) (punctuation 6120 . 6121) (semantic-list 6106 . 6120) (symbol 6086 . 6106) (punctuation 6085 . 6086) (symbol 6075 . 6084) (punctuation 6073 . 6074) (semantic-list 6059 . 6073) (symbol 6037 . 6059) (punctuation 6036 . 6037) (symbol 6026 . 6035) (punctuation 6024 . 6025) (semantic-list 6010 . 6024) (symbol 5993 . 6010) (punctuation 5992 . 5993) (symbol 5982 . 5991) (punctuation 5980 . 5981) (semantic-list 5966 . 5980) (symbol 5955 . 5966) (punctuation 5954 . 5955) (symbol 5944 . 5953) (punctuation 5941 . 5942) (semantic-list 5927 . 5941) (symbol 5915 . 5927) (punctuation 5914 . 5915) (symbol 5904 . 5913) (punctuation 5902 . 5903) (semantic-list 5888 . 5902) (symbol 5875 . 5888) (punctuation 5874 . 5875) (symbol 5864 . 5873) (punctuation 5862 . 5863) (semantic-list 5848 . 5862) (symbol 5835 . 5848) (punctuation 5834 . 5835) (symbol 5824 . 5833) (punctuation 5822 . 5823) (semantic-list 5808 . 5822) (symbol 5798 . 5808) (punctuation 5797 . 5798) (symbol 5787 . 5796) (punctuation 5785 . 5786) (semantic-list 5771 . 5785) (symbol 5763 . 5771) (punctuation 5762 . 5763) (symbol 5752 . 5761) (punctuation 5750 . 5751) (semantic-list 5736 . 5750) (symbol 5728 . 5736) (punctuation 5727 . 5728) (symbol 5717 . 5726) (punctuation 5715 . 5716) (semantic-list 5701 . 5715) (symbol 5693 . 5701) (punctuation 5692 . 5693) (symbol 5682 . 5691) (punctuation 5680 . 5681) (semantic-list 5666 . 5680) (symbol 5657 . 5666) (punctuation 5656 . 5657) (symbol 5646 . 5655) (punctuation 5643 . 5644) (semantic-list 5637 . 5643) (symbol 5624 . 5637) (punctuation 5623 . 5624) (symbol 5613 . 5622) (punctuation 5611 . 5612) (semantic-list 5605 . 5611) (symbol 5591 . 5605) (punctuation 5590 . 5591) (symbol 5580 . 5589) (punctuation 5577 . 5578) (semantic-list 5563 . 5577) (symbol 5549 . 5563) (VOID 5544 . 5548) (punctuation 5504 . 5505) (semantic-list 5472 . 5504) (symbol 5457 . 5472) (punctuation 5456 . 5457) (symbol 5443 . 5455) (punctuation 5441 . 5442) (semantic-list 5409 . 5441) (symbol 5393 . 5409) (punctuation 5392 . 5393) (symbol 5379 . 5391) (punctuation 5377 . 5378) (semantic-list 5345 . 5377) (symbol 5331 . 5345) (punctuation 5330 . 5331) (symbol 5317 . 5329) (punctuation 5315 . 5316) (semantic-list 5283 . 5315) (symbol 5269 . 5283) (punctuation 5268 . 5269) (symbol 5255 . 5267) (punctuation 5253 . 5254) (semantic-list 5191 . 5253) (symbol 5176 . 5191) (punctuation 5175 . 5176) (symbol 5162 . 5174) (punctuation 5159 . 5160) (semantic-list 5127 . 5159) (symbol 5116 . 5127) (punctuation 5115 . 5116) (symbol 5102 . 5114) (punctuation 5100 . 5101) (semantic-list 5068 . 5100) (symbol 5056 . 5068) (punctuation 5055 . 5056) (symbol 5042 . 5054) (punctuation 5040 . 5041) (semantic-list 5008 . 5040) (symbol 4998 . 5008) (punctuation 4997 . 4998) (symbol 4984 . 4996) (punctuation 4982 . 4983) (semantic-list 4950 . 4982) (symbol 4940 . 4950) (punctuation 4939 . 4940) (symbol 4926 . 4938) (punctuation 4924 . 4925) (semantic-list 4862 . 4924) (symbol 4851 . 4862) (punctuation 4850 . 4851) (symbol 4837 . 4849) (punctuation 4834 . 4835) (semantic-list 4802 . 4834) (symbol 4793 . 4802) (punctuation 4792 . 4793) (symbol 4779 . 4791) (punctuation 4777 . 4778) (semantic-list 4762 . 4777) (symbol 4755 . 4762) (punctuation 4754 . 4755) (symbol 4741 . 4753) (punctuation 4738 . 4739) (semantic-list 4721 . 4738) (symbol 4714 . 4721) (punctuation 4713 . 4714) (symbol 4700 . 4712) (punctuation 4698 . 4699) (semantic-list 4681 . 4698) (symbol 4672 . 4681) (punctuation 4671 . 4672) (symbol 4658 . 4670) (punctuation 4656 . 4657) (semantic-list 4639 . 4656) (symbol 4629 . 4639) (punctuation 4628 . 4629) (symbol 4615 . 4627) (punctuation 4613 . 4614) (semantic-list 4596 . 4613) (symbol 4586 . 4596) (punctuation 4585 . 4586) (symbol 4572 . 4584) (punctuation 4569 . 4570) (semantic-list 4537 . 4569) (symbol 4528 . 4537) (punctuation 4527 . 4528) (symbol 4514 . 4526) (punctuation 4512 . 4513) (semantic-list 4480 . 4512) (symbol 4469 . 4480) (punctuation 4468 . 4469) (symbol 4455 . 4467) (punctuation 4453 . 4454) (semantic-list 4436 . 4453) (symbol 4423 . 4436) (punctuation 4422 . 4423) (symbol 4409 . 4421) (punctuation 4381 . 4382) (semantic-list 4375 . 4381) (symbol 4366 . 4375) (punctuation 4365 . 4366) (symbol 4352 . 4364) (punctuation 4349 . 4350) (semantic-list 4343 . 4349) (symbol 4330 . 4343) (punctuation 4329 . 4330) (symbol 4316 . 4328) (punctuation 4314 . 4315) (semantic-list 4308 . 4314) (symbol 4294 . 4308) (punctuation 4293 . 4294) (symbol 4280 . 4292) (punctuation 4278 . 4279) (semantic-list 4272 . 4278) (symbol 4260 . 4272) (punctuation 4259 . 4260) (symbol 4246 . 4258) (punctuation 4243 . 4244) (semantic-list 4237 . 4243) (symbol 4228 . 4237) (punctuation 4227 . 4228) (symbol 4214 . 4226) (punctuation 4212 . 4213) (semantic-list 4206 . 4212) (symbol 4198 . 4206) (punctuation 4197 . 4198) (symbol 4184 . 4196) (punctuation 4181 . 4182) (semantic-list 4175 . 4181) (symbol 4165 . 4175) (punctuation 4164 . 4165) (symbol 4151 . 4163) (punctuation 4149 . 4150) (semantic-list 4143 . 4149) (symbol 4136 . 4143) (punctuation 4135 . 4136) (symbol 4122 . 4134) (punctuation 4120 . 4121) (semantic-list 4114 . 4120) (symbol 4107 . 4114) (punctuation 4106 . 4107) (symbol 4093 . 4105) (punctuation 4091 . 4092) (semantic-list 4085 . 4091) (symbol 4078 . 4085) (punctuation 4077 . 4078) (symbol 4064 . 4076) (punctuation 4061 . 4062) (semantic-list 4055 . 4061) (symbol 4043 . 4055) (punctuation 4042 . 4043) (symbol 4029 . 4041) (punctuation 4027 . 4028) (semantic-list 4021 . 4027) (symbol 4007 . 4021) (punctuation 4006 . 4007) (symbol 3993 . 4005) (punctuation 3991 . 3992) (semantic-list 3985 . 3991) (symbol 3976 . 3985) (punctuation 3975 . 3976) (symbol 3962 . 3974) (punctuation 3960 . 3961) (semantic-list 3954 . 3960) (symbol 3945 . 3954) (punctuation 3944 . 3945) (symbol 3931 . 3943) (punctuation 3929 . 3930) (semantic-list 3923 . 3929) (symbol 3914 . 3923) (punctuation 3913 . 3914) (symbol 3900 . 3912) (punctuation 3897 . 3898) (semantic-list 3891 . 3897) (symbol 3878 . 3891) (punctuation 3877 . 3878) (symbol 3864 . 3876) (punctuation 3862 . 3863) (semantic-list 3856 . 3862) (symbol 3843 . 3856) (punctuation 3842 . 3843) (symbol 3829 . 3841) (punctuation 3827 . 3828) (semantic-list 3821 . 3827) (symbol 3811 . 3821) (punctuation 3810 . 3811) (symbol 3797 . 3809) (punctuation 3795 . 3796) (semantic-list 3789 . 3795) (symbol 3777 . 3789) (punctuation 3776 . 3777) (symbol 3763 . 3775) (punctuation 3761 . 3762) (semantic-list 3755 . 3761) (symbol 3743 . 3755) (punctuation 3742 . 3743) (symbol 3729 . 3741) (punctuation 3727 . 3728) (semantic-list 3721 . 3727) (symbol 3712 . 3721) (punctuation 3711 . 3712) (symbol 3698 . 3710) (punctuation 3695 . 3696) (semantic-list 3689 . 3695) (symbol 3679 . 3689) (punctuation 3678 . 3679) (symbol 3665 . 3677) (punctuation 3663 . 3664) (semantic-list 3657 . 3663) (symbol 3650 . 3657) (punctuation 3649 . 3650) (symbol 3636 . 3648) (punctuation 3634 . 3635) (semantic-list 3628 . 3634) (symbol 3617 . 3628) (punctuation 3616 . 3617) (symbol 3603 . 3615) (punctuation 3600 . 3601) (semantic-list 3594 . 3600) (symbol 3585 . 3594) (punctuation 3584 . 3585) (symbol 3571 . 3583) (punctuation 3569 . 3570) (semantic-list 3563 . 3569) (symbol 3548 . 3563) (punctuation 3547 . 3548) (symbol 3534 . 3546) (punctuation 3532 . 3533) (semantic-list 3526 . 3532) (symbol 3512 . 3526) (punctuation 3511 . 3512) (symbol 3498 . 3510) (punctuation 3495 . 3496) (semantic-list 3489 . 3495) (symbol 3477 . 3489) (punctuation 3476 . 3477) (symbol 3463 . 3475) (punctuation 3460 . 3461) (semantic-list 3454 . 3460) (symbol 3447 . 3454) (punctuation 3446 . 3447) (symbol 3433 . 3445) (punctuation 3431 . 3432) (semantic-list 3425 . 3431) (symbol 3418 . 3425) (punctuation 3417 . 3418) (symbol 3404 . 3416) (punctuation 3376 . 3377) (semantic-list 3359 . 3376) (symbol 3345 . 3359) (punctuation 3344 . 3345) (symbol 3331 . 3343) (punctuation 3328 . 3329) (semantic-list 3302 . 3328) (symbol 3295 . 3302) (punctuation 3294 . 3295) (symbol 3281 . 3293) (punctuation 3279 . 3280) (semantic-list 3267 . 3279) (symbol 3261 . 3267) (punctuation 3260 . 3261) (symbol 3247 . 3259) (punctuation 3244 . 3245) (semantic-list 3191 . 3244) (symbol 3182 . 3191) (punctuation 3181 . 3182) (symbol 3168 . 3180) (punctuation 3166 . 3167) (semantic-list 3135 . 3166) (symbol 3126 . 3135) (punctuation 3125 . 3126) (symbol 3112 . 3124) (punctuation 3110 . 3111) (semantic-list 3079 . 3110) (symbol 3071 . 3079) (punctuation 3070 . 3071) (symbol 3057 . 3069) (punctuation 3054 . 3055) (semantic-list 3022 . 3054) (symbol 3008 . 3022) (punctuation 3007 . 3008) (symbol 2994 . 3006) (punctuation 2992 . 2993) (semantic-list 2975 . 2992) (symbol 2966 . 2975) (punctuation 2965 . 2966) (symbol 2952 . 2964) (punctuation 2950 . 2951) (semantic-list 2903 . 2950) (symbol 2891 . 2903) (punctuation 2890 . 2891) (symbol 2877 . 2889) (punctuation 2875 . 2876) (semantic-list 2843 . 2875) (symbol 2836 . 2843) (punctuation 2835 . 2836) (symbol 2822 . 2834) (punctuation 2819 . 2820) (semantic-list 2775 . 2819) (symbol 2763 . 2775) (punctuation 2762 . 2763) (symbol 2749 . 2761) (punctuation 2747 . 2748) (semantic-list 2715 . 2747) (symbol 2706 . 2715) (punctuation 2705 . 2706) (symbol 2692 . 2704) (punctuation 2690 . 2691) (semantic-list 2651 . 2690) (symbol 2640 . 2651) (punctuation 2639 . 2640) (symbol 2626 . 2638) (punctuation 2624 . 2625) (semantic-list 2592 . 2624) (symbol 2582 . 2592) (punctuation 2581 . 2582) (symbol 2568 . 2580) (punctuation 2536 . 2537) (semantic-list 2530 . 2536) (symbol 2521 . 2530) (punctuation 2520 . 2521) (symbol 2507 . 2519) (punctuation 2505 . 2506) (semantic-list 2485 . 2505) (symbol 2475 . 2485) (punctuation 2474 . 2475) (symbol 2461 . 2473) (punctuation 2459 . 2460) (semantic-list 2445 . 2459) (symbol 2433 . 2445) (punctuation 2432 . 2433) (symbol 2419 . 2431) (punctuation 2417 . 2418) (semantic-list 2403 . 2417) (symbol 2395 . 2403) (punctuation 2394 . 2395) (symbol 2381 . 2393) (punctuation 2379 . 2380) (semantic-list 2357 . 2379) (symbol 2348 . 2357) (punctuation 2347 . 2348) (symbol 2334 . 2346) (punctuation 2332 . 2333) (semantic-list 2317 . 2332) (symbol 2309 . 2317) (punctuation 2308 . 2309) (symbol 2295 . 2307) (punctuation 2293 . 2294) (semantic-list 2287 . 2293) (symbol 2279 . 2287) (punctuation 2278 . 2279) (symbol 2265 . 2277) (punctuation 2238 . 2239) (semantic-list 2223 . 2238) (symbol 2213 . 2223) (punctuation 2212 . 2213) (symbol 2199 . 2211) (punctuation 2197 . 2198) (semantic-list 2182 . 2197) (symbol 2171 . 2182) (punctuation 2170 . 2171) (symbol 2157 . 2169) (punctuation 2155 . 2156) (semantic-list 2140 . 2155) (symbol 2130 . 2140) (punctuation 2129 . 2130) (symbol 2116 . 2128) (punctuation 2114 . 2115) (semantic-list 2099 . 2114) (symbol 2090 . 2099) (punctuation 2089 . 2090) (symbol 2076 . 2088) (punctuation 2074 . 2075) (semantic-list 2058 . 2074) (symbol 2049 . 2058) (punctuation 2048 . 2049) (symbol 2035 . 2047) (punctuation 2033 . 2034) (semantic-list 2025 . 2033) (symbol 2017 . 2025) (punctuation 2016 . 2017) (symbol 2003 . 2015) (punctuation 2001 . 2002) (semantic-list 1995 . 2001) (symbol 1988 . 1995) (punctuation 1987 . 1988) (symbol 1974 . 1986) (punctuation 1947 . 1948) (semantic-list 1935 . 1947) (symbol 1924 . 1935) (VOID 1919 . 1923) (punctuation 1917 . 1918) (semantic-list 1900 . 1917) (symbol 1890 . 1900) (VOID 1885 . 1889) (punctuation 1882 . 1883) (semantic-list 1865 . 1882) (symbol 1853 . 1865) (punctuation 1852 . 1853) (symbol 1839 . 1851) (punctuation 1837 . 1838) (semantic-list 1803 . 1837) (symbol 1793 . 1803) (punctuation 1792 . 1793) (symbol 1779 . 1791) (punctuation 1777 . 1778) (semantic-list 1760 . 1777) (symbol 1752 . 1760) (punctuation 1751 . 1752) (symbol 1738 . 1750) (punctuation 1736 . 1737) (semantic-list 1718 . 1736) (symbol 1711 . 1718) (punctuation 1710 . 1711) (symbol 1697 . 1709) (punctuation 1666 . 1667) (semantic-list 1649 . 1666) (semantic-list 1636 . 1649) (punctuation 1635 . 1636) (symbol 1626 . 1635) (TYPEDEF 1618 . 1625) (punctuation 1616 . 1617) (semantic-list 1598 . 1616) (semantic-list 1581 . 1598) (punctuation 1580 . 1581) (symbol 1571 . 1580) (TYPEDEF 1563 . 1570) (punctuation 1561 . 1562) (semantic-list 1549 . 1561) (semantic-list 1535 . 1549) (punctuation 1534 . 1535) (symbol 1525 . 1534) (TYPEDEF 1517 . 1524) (punctuation 1514 . 1515) (semantic-list 1508 . 1514) (semantic-list 1495 . 1508) (punctuation 1494 . 1495) (symbol 1485 . 1494) (TYPEDEF 1477 . 1484) (punctuation 1475 . 1476) (semantic-list 1463 . 1475) (semantic-list 1450 . 1463) (VOID 1446 . 1450) (TYPEDEF 1438 . 1445) (punctuation 1410 . 1411) (semantic-list 1354 . 1410) (symbol 1336 . 1354) (INT 1332 . 1335) (punctuation 1330 . 1331) (semantic-list 1262 . 1330) (symbol 1248 . 1262) (INT 1244 . 1247) (punctuation 1242 . 1243) (semantic-list 1174 . 1242) (symbol 1160 . 1174) (INT 1156 . 1159) (punctuation 1154 . 1155) (semantic-list 1063 . 1154) (symbol 1053 . 1063) (INT 1049 . 1052) (punctuation 1047 . 1048) (semantic-list 971 . 1047) (symbol 962 . 971) (INT 958 . 961) (punctuation 774 . 775) (semantic-list 751 . 774) (symbol 735 . 751) (VOID 730 . 734) (punctuation 728 . 729) (semantic-list 714 . 728) (symbol 701 . 714) (VOID 696 . 700) (punctuation 694 . 695) (semantic-list 680 . 694) (symbol 666 . 680) (punctuation 665 . 666) (CHAR 660 . 664) (punctuation 658 . 659) (semantic-list 644 . 658) (symbol 630 . 644) (VOID 625 . 629))
      :lexical-table 
        '(("mpc_h")
          )
)
    (semanticdb-table "mpc.c"
      :major-mode 'c-mode
      :tags nil
      :file "mpc.c"
      :pointmax 102883
      :fsize 106712
      :lastmodtime '(22618 41838 72965 476000)
      :unmatched-syntax nil))
  :file "!home!wlisper!workspace!buildyourownlisp!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
